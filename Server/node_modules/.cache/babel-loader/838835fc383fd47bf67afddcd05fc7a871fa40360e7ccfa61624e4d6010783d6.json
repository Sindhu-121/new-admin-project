{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new admin project\\\\client\\\\src\\\\components\\\\Coursecreation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Coursecreation = () => {\n  _s();\n  const [typeOfTest, setTypeOfTest] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [selectedexams, setSelectedexams] = useState('');\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [typeofQuestion, setTypeofQuestion] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [subjectsData, setSubjectsData] = useState([]);\n  const [formData, setFormData] = useState({\n    courseName: '',\n    examId: '',\n    typeOfTestId: '',\n    questiontypes: '',\n    courseStartDate: '',\n    courseEndDate: '',\n    cost: '',\n    discount: '',\n    discountAmount: '',\n    totalPrice: ''\n  });\n  useEffect(() => {\n    const fetchTypeOfTest = async () => {\n      try {\n        const response = await fetch('http://localhost:3081/type_of_tests');\n        const result = await response.json();\n        setTypeOfTest(result);\n      } catch (error) {\n        console.error('Error fetching Type of questions:', error);\n      }\n    };\n    fetchTypeOfTest();\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3081/courese-exams').then(response => response.json()).then(data => {\n      setExams(data);\n    }).catch(error => console.error('Error fetching exams:', error));\n  }, []);\n  const handleexams = async event => {\n    const selectedExamId = event.target.value;\n    try {\n      const response = await fetch(`http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`);\n      const data = await response.json();\n      console.log('Subjects Data:', data); // Debugging line\n      setSubjectsData(data); // Update subjectsData state\n      setSelectedSubjects([]); // Reset selected subjects\n    } catch (error) {\n      console.error('Error fetching subjects:', error);\n    }\n    setSelectedexams(selectedExamId);\n  };\n  const handleSubjectChange = (event, subjectId) => {\n    const isChecked = event.target.checked;\n\n    // Fetch the subject details from subjectsData using subjectId\n    const subject = subjectsData.find(subj => subj.subjectId === subjectId);\n    if (subject) {\n      // If checked, add the subject to the selectedSubjects array\n      // If unchecked, remove the subject from the selectedSubjects array\n      setSelectedSubjects(prevSelectedSubjects => {\n        if (checked) {\n          return [...prevSelectedSubjects, subjectId];\n        } else {\n          return prevSelectedSubjects.filter(id => id !== subjectId);\n        }\n      });\n    }\n  };\n  useEffect(() => {\n    const fetchTypeOfQuestion = async () => {\n      try {\n        const response = await fetch('http://localhost:3081/type_of_questions');\n        const result = await response.json();\n        setTypeofQuestion(result);\n      } catch (error) {\n        console.error('Error fetching Type of questions:', error);\n      }\n    };\n    fetchTypeOfQuestion();\n  }, []);\n  const handleStartDateChange = e => {\n    const formattedDate = e.target.value;\n    setStartDate(formattedDate);\n  };\n  const handleEndDateChange = e => {\n    const formattedDate = e.target.value;\n    setEndDate(formattedDate);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'cost' || name === 'discount') {\n      const cost = name === 'cost' ? parseFloat(value) : formData.cost;\n      const discount = name === 'discount' ? parseFloat(value) : formData.discount;\n      const discountAmount = !isNaN(cost) && !isNaN(discount) ? cost * discount / 100 : '';\n      const totalPrice = !isNaN(cost) && !isNaN(discountAmount) ? cost - discountAmount : '';\n      setFormData({\n        ...formData,\n        typeOfTestId: value,\n        examId: selectedexams,\n        subjects: selectedSubjects,\n        typeofQuestion,\n        courseStartDate: startDate,\n        courseEndDate: endDate,\n        cost: cost,\n        discount: discount,\n        discountAmount: discountAmount,\n        totalPrice: totalPrice\n      });\n    } else if (name === 'courseStartDate' || name === 'courseEndDate') {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prepare the data for submission\n    const data = {\n      ...formData,\n      typeOfTest,\n      examId: selectedexams,\n      subjects: selectedSubjects,\n      typeofQuestion\n    };\n\n    // Submit the data to the server\n    try {\n      const response = await fetch('http://localhost:3081/course-creation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n      console.log(result);\n      // Handle success or show a success message to the user\n    } catch (error) {\n      console.error('Error submitting course data:', error);\n      // Handle error or show an error message to the user\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"courseName\",\n          children: \"Course Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"courseName\",\n          name: \"courseName\",\n          value: formData.courseName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type of test:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.typeOfTestId,\n            name: \"typeOfTestId\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select type of test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 5\n            }, this), typeOfTest.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type.typeOfTestId,\n              children: type.typeOfTestName\n            }, type.typeOfTestId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 7\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Select Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exams\",\n            children: \"Select Exam:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"exams\",\n            value: selectedexams,\n            onChange: handleexams,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select exams\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 13\n            }, this), exams.map(exams => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: exams.examId,\n              children: exams.examName\n            }, exams.examId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Subjects:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 3\n          }, this), subjectsData.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `subject-${subject.subjectId}`,\n              name: `subject-${subject.subjectId}`,\n              value: subject.subjectId,\n              checked: selectedSubjects.includes(subject.subjectId),\n              onChange: e => handleSubjectChange(e, subject.subjectId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `subject-${subject.subjectId}`,\n              children: subject.subjectName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 7\n            }, this)]\n          }, subject.subjectId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 5\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"type of Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: typeofQuestion.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), \" \", type.typeofQuestion]\n          }, type.quesionTypeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Course Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"courseStartDate\",\n            children: \"Course Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"courseStartDate\",\n            name: \"courseStartDate\",\n            value: startDate,\n            onChange: handleStartDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"courseEndDate\",\n            children: \"Course End Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"courseEndDate\",\n            name: \"courseEndDate\",\n            value: endDate,\n            onChange: handleEndDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Cost and Discounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cost\",\n            children: \"Cost:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cost\",\n            name: \"cost\",\n            value: formData.cost,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"discount\",\n            children: \"Discount (%):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"discount\",\n            name: \"discount\",\n            value: formData.discount,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"discountAmount\",\n            children: \"Discount Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"discountAmount\",\n            name: \"discountAmount\",\n            value: formData.discountAmount,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"totalPrice\",\n            children: \"Total Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"totalPrice\",\n            name: \"totalPrice\",\n            value: formData.totalPrice,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(Coursecreation, \"F1WEWoCvEaANj4QYD/UZB/E/aP8=\");\n_c = Coursecreation;\nexport default Coursecreation;\nvar _c;\n$RefreshReg$(_c, \"Coursecreation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Coursecreation","_s","typeOfTest","setTypeOfTest","exams","setExams","selectedexams","setSelectedexams","selectedSubjects","setSelectedSubjects","typeofQuestion","setTypeofQuestion","startDate","setStartDate","endDate","setEndDate","subjectsData","setSubjectsData","formData","setFormData","courseName","examId","typeOfTestId","questiontypes","courseStartDate","courseEndDate","cost","discount","discountAmount","totalPrice","fetchTypeOfTest","response","fetch","result","json","error","console","then","data","catch","handleexams","event","selectedExamId","target","value","log","handleSubjectChange","subjectId","isChecked","checked","subject","find","subj","prevSelectedSubjects","filter","id","fetchTypeOfQuestion","handleStartDateChange","e","formattedDate","handleEndDateChange","handleChange","name","parseFloat","isNaN","subjects","handleSubmit","preventDefault","method","headers","body","JSON","stringify","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","map","typeOfTestName","examName","includes","subjectName","quesionTypeId","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/new admin project/client/src/components/Coursecreation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst Coursecreation = () => {\r\n  const [typeOfTest, setTypeOfTest] = useState([]);\r\n  const [exams, setExams] = useState([]);\r\n  const [selectedexams, setSelectedexams] = useState('');\r\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n  const [typeofQuestion, setTypeofQuestion] = useState([]);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [subjectsData, setSubjectsData] = useState([]);\r\n\r\n const [formData, setFormData] = useState({\r\n  courseName: '',\r\n  examId: '',\r\n  typeOfTestId: '',\r\n  questiontypes:'',\r\n  courseStartDate: '',\r\n  courseEndDate: '',\r\n  cost: '',\r\n  discount: '',\r\n  discountAmount: '',\r\n  totalPrice: '',\r\n\r\n});\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchTypeOfTest = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3081/type_of_tests');\r\n        const result = await response.json();\r\n        setTypeOfTest(result);\r\n      } catch (error) {\r\n        console.error('Error fetching Type of questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchTypeOfTest();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3081/courese-exams')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setExams(data);\r\n      })\r\n      .catch(error => console.error('Error fetching exams:', error));\r\n  }, []);\r\n  const handleexams = async (event) => {\r\n    const selectedExamId = event.target.value;\r\n    try {\r\n      const response = await fetch(`http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`);\r\n      const data = await response.json();\r\n      console.log('Subjects Data:', data); // Debugging line\r\n      setSubjectsData(data);  // Update subjectsData state\r\n      setSelectedSubjects([]); // Reset selected subjects\r\n    } catch (error) {\r\n      console.error('Error fetching subjects:', error);\r\n    }\r\n  \r\n    setSelectedexams(selectedExamId);\r\n  };\r\n  \r\n\r\n\r\n  const handleSubjectChange = (event, subjectId) => {\r\n    const isChecked = event.target.checked;\r\n\r\n    // Fetch the subject details from subjectsData using subjectId\r\n    const subject = subjectsData.find((subj) => subj.subjectId === subjectId);\r\n\r\n    if (subject) {\r\n      // If checked, add the subject to the selectedSubjects array\r\n      // If unchecked, remove the subject from the selectedSubjects array\r\n      setSelectedSubjects((prevSelectedSubjects) => {\r\n        if (checked) {\r\n          return [...prevSelectedSubjects, subjectId];\r\n        } else {\r\n          return prevSelectedSubjects.filter((id) => id !== subjectId);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTypeOfQuestion = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3081/type_of_questions');\r\n        const result = await response.json();\r\n        setTypeofQuestion(result);\r\n      } catch (error) {\r\n        console.error('Error fetching Type of questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchTypeOfQuestion();\r\n  }, []);\r\n\r\n\r\n  const handleStartDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setStartDate(formattedDate);\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setEndDate(formattedDate);\r\n  };\r\n\r\n  \r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'cost' || name === 'discount') {\r\n      const cost = name === 'cost' ? parseFloat(value) : formData.cost;\r\n      const discount = name === 'discount' ? parseFloat(value) : formData.discount;\r\n      const discountAmount = (!isNaN(cost) && !isNaN(discount)) ? (cost * discount) / 100 : '';\r\n      const totalPrice = (!isNaN(cost) && !isNaN(discountAmount)) ? cost - discountAmount : '';\r\n      setFormData({\r\n        ...formData,\r\n        typeOfTestId: value,\r\n        examId: selectedexams,\r\n        subjects: selectedSubjects,\r\n        typeofQuestion,\r\n        courseStartDate: startDate,\r\n        courseEndDate: endDate,\r\n        cost: cost,\r\n        discount: discount,\r\n        discountAmount: discountAmount,\r\n        totalPrice: totalPrice,\r\n\r\n      });\r\n    } else if (name === 'courseStartDate' || name === 'courseEndDate') {\r\n      setFormData({ ...formData, [name]: value });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  \r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    // Prepare the data for submission\r\n    const data = {\r\n      ...formData,\r\n      typeOfTest,\r\n      examId: selectedexams,\r\n      subjects: selectedSubjects,\r\n      typeofQuestion,\r\n    };\r\n\r\n    // Submit the data to the server\r\n    try {\r\n      const response = await fetch('http://localhost:3081/course-creation', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const result = await response.json();\r\n      console.log(result);\r\n      // Handle success or show a success message to the user\r\n    } catch (error) {\r\n      console.error('Error submitting course data:', error);\r\n      // Handle error or show an error message to the user\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n      <div>\r\n         <label htmlFor=\"courseName\">Course Name:</label>\r\n         <input\r\n            type=\"text\"\r\n            id=\"courseName\"\r\n            name=\"courseName\"\r\n            value={formData.courseName}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <br />\r\n        <fieldset>\r\n        <label>\r\n          Type of test:\r\n        </label>\r\n        <div>\r\n  <select\r\n    value={formData.typeOfTestId}\r\n    name=\"typeOfTestId\"\r\n    onChange={handleChange}\r\n  >\r\n    <option value=\"\">Select type of test</option>\r\n    {typeOfTest.map((type) => (\r\n      <option key={type.typeOfTestId} value={type.typeOfTestId}>\r\n        {type.typeOfTestName}\r\n      </option>\r\n    ))}\r\n  </select>\r\n</div>\r\n        </fieldset>\r\n        <br />\r\n        <fieldset>\r\n        <legend>Select Exam</legend>\r\n        <div>\r\n          <label htmlFor=\"exams\">Select Exam:</label>\r\n          <select id=\"exams\" value={selectedexams} onChange={handleexams}>\r\n            <option value=\"\">Select exams</option>\r\n            {exams.map(exams => (\r\n              <option key={exams.examId} value={exams.examId}>\r\n                {exams.examName}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n         <br />\r\n         <div>\r\n  <label>Select Subjects:</label>\r\n  {subjectsData.map((subject) => (\r\n    <div key={subject.subjectId}>\r\n     <input\r\n  type=\"checkbox\"\r\n  id={`subject-${subject.subjectId}`}\r\n  name={`subject-${subject.subjectId}`}\r\n  value={subject.subjectId}\r\n  checked={selectedSubjects.includes(subject.subjectId)}\r\n  onChange={(e) => handleSubjectChange(e, subject.subjectId)}\r\n/>\r\n      <label htmlFor={`subject-${subject.subjectId}`}>{subject.subjectName}</label>\r\n    </div>\r\n  ))}\r\n</div>\r\n        </fieldset>\r\n         <br />\r\n         <fieldset>\r\n        <label>\r\n          type of Questions:\r\n        </label>\r\n        <div>\r\n          {typeofQuestion.map((type) => (\r\n            <div key={type.quesionTypeId}>\r\n              <input type=\"checkbox\" /> {type.typeofQuestion}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        </fieldset>\r\n        <br />\r\n        <fieldset>\r\n        <legend>Course Duration</legend>\r\n        <div>\r\n          <label htmlFor=\"courseStartDate\">Course Start Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"courseStartDate\"\r\n            name=\"courseStartDate\"\r\n            value={startDate}\r\n            onChange={handleStartDateChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"courseEndDate\">Course End Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"courseEndDate\"\r\n            name=\"courseEndDate\"\r\n            value={endDate}\r\n            onChange={handleEndDateChange}\r\n          />\r\n        </div>\r\n        </fieldset>\r\n         <br />\r\n        <fieldset>\r\n        <legend>Cost and Discounts</legend>\r\n         <div>\r\n          <label htmlFor=\"cost\">Cost:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"cost\"\r\n            name=\"cost\"\r\n            value={formData.cost}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n       <div>\r\n          <label htmlFor=\"discount\">Discount (%):</label>\r\n        <input\r\n            type=\"number\"\r\n            id=\"discount\"\r\n            name=\"discount\"\r\n            value={formData.discount}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"discountAmount\">Discount Amount:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"discountAmount\"\r\n            name=\"discountAmount\"\r\n            value={formData.discountAmount}\r\n            readOnly \r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"totalPrice\">Total Price:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"totalPrice\"\r\n            name=\"totalPrice\"\r\n            value={formData.totalPrice}\r\n            readOnly\r\n          />\r\n        </div>\r\n        </fieldset>\r\n        <button type=\"submit\">Create Course</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Coursecreation"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}