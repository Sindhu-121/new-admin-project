{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new admin project\\\\client\\\\src\\\\components\\\\Examcreation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './admin.css';\nimport SuccessPopup from './SuccessPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Examcreation() {\n  _s();\n  const [examName, setExamName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [submitting, setSubmitting] = useState(false);\n  const [formOpen, setFormOpen] = useState(false);\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\n  const [examsWithSubjects, setExamsWithSubjects] = useState([]);\n  // const [isEditing, setIsEditing] = useState(false);\n  const [editedExam, setEditedExam] = useState({});\n  const [editedData, setEditedData] = useState({});\n  const resetForm = () => {\n    setExamName('');\n    setStartDate('');\n    setEndDate('');\n    setSelectedSubjects([]);\n  };\n  useEffect(() => {\n    // Fetch subjects from the backend when the component mounts\n    axios.get('http://localhost:3081/subjects').then(response => {\n      setSubjects(response.data);\n    }).catch(error => {\n      console.error('Error fetching subjects:', error);\n    });\n  }, []);\n  const handleCheckboxChange = subjectId => {\n    // Toggle the selection of subjects\n    setSelectedSubjects(prevSelected => {\n      if (prevSelected.includes(subjectId)) {\n        return prevSelected.filter(id => id !== subjectId);\n      } else {\n        return [...prevSelected, subjectId];\n      }\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitting(true);\n    const examData = {\n      examName,\n      startDate,\n      endDate,\n      selectedSubjects\n    };\n    axios.post('http://localhost:3081/exams', examData).then(response => {\n      console.log('Exam created:', response.data);\n      // Reset form fields and state as needed\n      setSubmitting(false);\n      resetForm();\n      setShowSuccessPopup(true);\n    }).catch(error => {\n      console.error('Error creating exam:', error);\n      setSubmitting(false);\n    });\n  };\n  const closeSuccessPopup = () => {\n    setShowSuccessPopup(false);\n  };\n  useEffect(() => {\n    axios.get('http://localhost:3081/exams-with-subjects').then(response => {\n      setExamsWithSubjects(response.data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  const handleEdit = examId => {\n    // Find the exam to edit based on examId\n    const examToEdit = examsWithSubjects.find(exam => exam.examId === examId);\n    setEditedExam(examToEdit);\n    setEditedData({\n      examName: examToEdit.examName,\n      startDate: examToEdit.startDate,\n      endDate: examToEdit.endDate\n    });\n  };\n  const handleUpdate = () => {\n    // Update the edited data on the client side\n    setExamsWithSubjects(prevExams => prevExams.map(exam => exam.examId === editedExam.examId ? {\n      ...exam,\n      ...editedData\n    } : exam));\n    setEditedExam(null);\n\n    // Send a request to update the exam data in the database\n    axios.put(`http://localhost:3081/exams-edit/${editedExam.examId}`, editedData).then(response => {\n      console.log(`Exam with ID ${editedExam.examId} updated in the database`);\n    }).catch(error => {\n      console.error('Error updating exam:', error);\n    });\n  };\n  const handleCancel = () => {\n    setEditedExam(null);\n  };\n  const handleDelete = examId => {\n    // Handle the \"Delete\" action for the given examId on the client side\n    const confirmDelete = window.confirm('Are you sure you want to delete this data?');\n    if (confirmDelete) {\n      setExamsWithSubjects(prevExams => prevExams.filter(exam => exam.examId !== examId));\n\n      // Send a request to delete the exam from the server\n      axios.delete(`http://localhost:3081/exams/${examId}`).then(response => {\n        console.log(`Exam with ID ${examId} deleted from the database`);\n      }).catch(error => {\n        console.error('Error deleting exam:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), formOpen ?\n    /*#__PURE__*/\n    // Conditional rendering of the form\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Exam Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: examName,\n          onChange: e => setExamName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Subjects:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"subject-list\",\n        children: subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedSubjects.includes(subject.subjectId),\n              onChange: () => handleCheckboxChange(subject.subjectId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this), subject.subjectName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this)\n        }, subject.subjectId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: submitting,\n        children: \"Create Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormOpen(true),\n      children: \"+Add Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this), showSuccessPopup && /*#__PURE__*/_jsxDEV(SuccessPopup, {\n      onClose: closeSuccessPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Exams with Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Serial no\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exam Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subjects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: examsWithSubjects.map(exam => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.examId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editedExam === exam ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedData.examName,\n                onChange: e => setEditedData({\n                  ...editedData,\n                  examName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 41\n              }, this) : exam.examName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editedExam === exam ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: editedData.startDate,\n                onChange: e => setEditedData({\n                  ...editedData,\n                  startDate: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 41\n              }, this) : exam.startDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editedExam === exam ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: editedData.endDate,\n                onChange: e => setEditedData({\n                  ...editedData,\n                  endDate: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 41\n              }, this) : exam.endDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editedExam === exam ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleUpdate,\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: {\n                    handleCancel\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(exam.examId),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(exam.examId),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this)]\n          }, exam.examId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s(Examcreation, \"kerJumKTND8XssRW8XDOjbOO/QI=\");\n_c = Examcreation;\nexport default Examcreation;\nvar _c;\n$RefreshReg$(_c, \"Examcreation\");","map":{"version":3,"names":["React","useState","useEffect","axios","SuccessPopup","jsxDEV","_jsxDEV","Examcreation","_s","examName","setExamName","startDate","setStartDate","endDate","setEndDate","selectedSubjects","setSelectedSubjects","subjects","setSubjects","submitting","setSubmitting","formOpen","setFormOpen","showSuccessPopup","setShowSuccessPopup","examsWithSubjects","setExamsWithSubjects","editedExam","setEditedExam","editedData","setEditedData","resetForm","get","then","response","data","catch","error","console","handleCheckboxChange","subjectId","prevSelected","includes","filter","id","handleSubmit","e","preventDefault","examData","post","log","closeSuccessPopup","handleEdit","examId","examToEdit","find","exam","handleUpdate","prevExams","map","put","handleCancel","handleDelete","confirmDelete","window","confirm","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","className","subject","checked","subjectName","disabled","onClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/new admin project/client/src/components/Examcreation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './admin.css'\r\nimport SuccessPopup from './SuccessPopup';\r\nfunction Examcreation() {\r\n    const [examName, setExamName] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [showSuccessPopup, setShowSuccessPopup] = useState(false);\r\n    const [examsWithSubjects, setExamsWithSubjects] = useState([]);\r\n    // const [isEditing, setIsEditing] = useState(false);\r\n    const [editedExam, setEditedExam] = useState({});\r\n    const [editedData, setEditedData] = useState({});\r\n\r\n    const resetForm = () => {\r\n        setExamName('');\r\n        setStartDate('');\r\n        setEndDate('');\r\n        setSelectedSubjects([]);\r\n    };\r\n    useEffect(() => {\r\n        // Fetch subjects from the backend when the component mounts\r\n        axios.get('http://localhost:3081/subjects')\r\n            .then(response => {\r\n                setSubjects(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching subjects:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleCheckboxChange = (subjectId) => {\r\n        // Toggle the selection of subjects\r\n        setSelectedSubjects((prevSelected) => {\r\n            if (prevSelected.includes(subjectId)) {\r\n                return prevSelected.filter((id) => id !== subjectId);\r\n            } else {\r\n                return [...prevSelected, subjectId];\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSubmitting(true);\r\n\r\n        const examData = {\r\n            examName,\r\n            startDate,\r\n            endDate,\r\n            selectedSubjects,\r\n        };\r\n\r\n        axios.post('http://localhost:3081/exams', examData)\r\n            .then(response => {\r\n                console.log('Exam created:', response.data);\r\n                // Reset form fields and state as needed\r\n                setSubmitting(false);\r\n                resetForm();\r\n                setShowSuccessPopup(true);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error creating exam:', error);\r\n                setSubmitting(false);\r\n            });\r\n    };\r\n    const closeSuccessPopup = () => {\r\n        setShowSuccessPopup(false);\r\n    };\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3081/exams-with-subjects')\r\n            .then(response => {\r\n                setExamsWithSubjects(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    }, []);\r\n\r\n\r\n    const handleEdit = (examId) => {\r\n        // Find the exam to edit based on examId\r\n        const examToEdit = examsWithSubjects.find(exam => exam.examId === examId);\r\n        setEditedExam(examToEdit);\r\n        setEditedData({\r\n            examName: examToEdit.examName,\r\n            startDate: examToEdit.startDate,\r\n            endDate: examToEdit.endDate,\r\n        });\r\n    };\r\n\r\n    const handleUpdate = () => {\r\n        // Update the edited data on the client side\r\n        setExamsWithSubjects(prevExams =>\r\n            prevExams.map(exam =>\r\n                exam.examId === editedExam.examId ? { ...exam, ...editedData } : exam\r\n            )\r\n        );\r\n        setEditedExam(null);\r\n\r\n        // Send a request to update the exam data in the database\r\n        axios.put(`http://localhost:3081/exams-edit/${editedExam.examId}`, editedData)\r\n            .then(response => {\r\n                console.log(`Exam with ID ${editedExam.examId} updated in the database`);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error updating exam:', error);\r\n            });\r\n    };\r\n    const handleCancel = () => {\r\n        setEditedExam(null);\r\n      };\r\n    const handleDelete = (examId) => {\r\n        // Handle the \"Delete\" action for the given examId on the client side\r\n        const confirmDelete = window.confirm('Are you sure you want to delete this data?');\r\n        if (confirmDelete) {\r\n            setExamsWithSubjects(prevExams => prevExams.filter(exam => exam.examId !== examId));\r\n\r\n            // Send a request to delete the exam from the server\r\n            axios.delete(`http://localhost:3081/exams/${examId}`)\r\n                .then(response => {\r\n                    console.log(`Exam with ID ${examId} deleted from the database`);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error deleting exam:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Create Exam</h2>\r\n            {formOpen ? ( // Conditional rendering of the form\r\n                <form onSubmit={handleSubmit}>\r\n                    <label>\r\n                        Exam Name:\r\n                        <input type=\"text\" value={examName} onChange={(e) => setExamName(e.target.value)} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Start Date:\r\n                        <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        End Date:\r\n                        <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n                    </label>\r\n                    <br />\r\n                    <label>Subjects:</label>\r\n                    <ul className=\"subject-list\">\r\n                        {subjects.map(subject => (\r\n                            <li key={subject.subjectId}>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={selectedSubjects.includes(subject.subjectId)}\r\n                                        onChange={() => handleCheckboxChange(subject.subjectId)}\r\n                                    />\r\n                                    {subject.subjectName}\r\n                                </label>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <button type=\"submit\" disabled={submitting}>Create Exam</button>\r\n                </form>\r\n\r\n            ) : (\r\n                <button onClick={() => setFormOpen(true)}>+Add Exam</button>\r\n            )}\r\n            {showSuccessPopup && <SuccessPopup onClose={closeSuccessPopup} />}\r\n\r\n            <div>\r\n                <h2>Exams with Subjects</h2>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Serial no</th>\r\n                            <th>Exam Name</th>\r\n                            <th>Start Date</th>\r\n                            <th>End Date</th>\r\n                            <th>Subjects</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {examsWithSubjects.map(exam => (\r\n                            <tr key={exam.examId}>\r\n                                {/* Table row data */}\r\n                                <td>{exam.examId}</td>\r\n                                <td>\r\n                                    {editedExam === exam ? (\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={editedData.examName}\r\n                                            onChange={(e) => setEditedData({ ...editedData, examName: e.target.value })}\r\n                                        />\r\n                                    ) : exam.examName}\r\n                                </td>\r\n                                <td>\r\n                                    {editedExam === exam ? (\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={editedData.startDate}\r\n                                            onChange={(e) => setEditedData({ ...editedData, startDate: e.target.value })}\r\n                                        />\r\n                                    ) : exam.startDate}\r\n                                </td>\r\n                                <td>\r\n                                    {editedExam === exam ? (\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={editedData.endDate}\r\n                                            onChange={(e) => setEditedData({ ...editedData, endDate: e.target.value })}\r\n                                        />\r\n                                    ) : exam.endDate}\r\n                                </td>\r\n                                <td>\r\n                                    {editedExam === exam ? (\r\n                                        <div>\r\n                                            <button onClick={handleUpdate}>Update</button>\r\n                                            <button onClick={{handleCancel}}>Cancel</button>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <button onClick={() => handleEdit(exam.examId)}>Edit</button>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <button onClick={() => handleDelete(exam.examId)}>Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Examcreation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}