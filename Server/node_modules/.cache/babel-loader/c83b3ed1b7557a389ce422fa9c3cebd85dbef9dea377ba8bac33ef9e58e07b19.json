{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new admin project\\\\client\\\\src\\\\components\\\\Examcreation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './admin.css';\nimport SuccessPopup from './SuccessPopup';\nimport EditForm from './EditForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Examcreation() {\n  _s();\n  const [examName, setExamName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [submitting, setSubmitting] = useState(false);\n  const [formOpen, setFormOpen] = useState(false);\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\n  const [examsWithSubjects, setExamsWithSubjects] = useState([]);\n  // const [isEditing, setIsEditing] = useState(false);\n  // const [editedExam, setEditedExam] = useState({});\n  // const [editedData, setEditedData] = useState({});\n  // const [editedSubjects, setEditedSubjects] = useState([]);\n  // const [isEditingSubjects, setIsEditingSubjects] = useState(false);\n  // const [selectedExam, setSelectedExam] = useState(null);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [selectedExam, setSelectedExam] = useState(null);\n  const resetForm = () => {\n    setExamName('');\n    setStartDate('');\n    setEndDate('');\n    setSelectedSubjects([]);\n  };\n  useEffect(() => {\n    // Fetch subjects from the backend when the component mounts\n    axios.get('http://localhost:3081/subjects').then(response => {\n      setSubjects(response.data);\n    }).catch(error => {\n      console.error('Error fetching subjects:', error);\n    });\n  }, []);\n  const handleCheckboxChange = subjectId => {\n    // Toggle the selection of subjects\n    setSelectedSubjects(prevSelected => {\n      if (prevSelected.includes(subjectId)) {\n        return prevSelected.filter(id => id !== subjectId);\n      } else {\n        return [...prevSelected, subjectId];\n      }\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitting(true);\n    const examData = {\n      examName,\n      startDate,\n      endDate,\n      selectedSubjects\n    };\n    axios.post('http://localhost:3081/exams', examData).then(response => {\n      console.log('Exam created:', response.data);\n      // Reset form fields and state as needed\n      setSubmitting(false);\n      resetForm();\n      setShowSuccessPopup(true);\n    }).catch(error => {\n      console.error('Error creating exam:', error);\n      setSubmitting(false);\n    });\n  };\n  const closeSuccessPopup = () => {\n    setShowSuccessPopup(false);\n  };\n  useEffect(() => {\n    axios.get('http://localhost:3081/exams-with-subjects').then(response => {\n      setExamsWithSubjects(response.data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n\n  //     const handleDelete = (examId) => {\n  //         // Handle the \"Delete\" action for the given examId on the client side\n  //         const confirmDelete = window.confirm('Are you sure you want to delete this data?');\n  //         if (confirmDelete) {\n  //             setExamsWithSubjects(prevExams => prevExams.filter(exam => exam.examId !== examId));\n\n  //             // Send a request to delete the exam from the server\n  //             axios.delete(`http://localhost:3081/exams/${examId}`)\n  //                 .then(response => {\n  //                     console.log(`Exam with ID ${examId} deleted from the database`);\n  //                 })\n  //                 .catch(error => {\n  //                     console.error('Error deleting exam:', error);\n  //                 });\n  //         }\n  //     };\n\n  // const handleEdit = (examId) => {\n  //     // Find the exam to edit based on examId\n  //     const examToEdit = examsWithSubjects.find((exam) => exam.examId === examId);\n  //     setSelectedExam(examToEdit);\n\n  //     // Fetch the subjects for the selected exam\n  //     axios.get(`http://localhost:3081/exams/${examId}/subjects`)\n  //       .then((response) => {\n  //         const selectedSubjects = response.data.map((subject) => subject.subjectName);\n  //         setEditedSubjects(selectedSubjects);\n  //       })\n  //       .catch((error) => {\n  //         console.error('Error fetching subjects for the selected exam:', error);\n  //       });\n\n  //     // Set the form fields in edit mode\n  //     setEditedData({\n  //       examName: examToEdit.examName,\n  //       startDate: examToEdit.startDate,\n  //       endDate: examToEdit.endDate,\n  //     });\n  //   };\n\n  //   // ...\n\n  //   // Update exam data (PUT request)\n  //   const handleUpdate = () => {\n  //     if (selectedExam) {\n  //       // Update the edited data on the client side\n  //       const updatedExam = {\n  //         examId: selectedExam.examId,\n  //         examName: editedData.examName,\n  //         startDate: editedData.startDate,\n  //         endDate: editedData.endDate,\n  //         subjects: editedSubjects,\n  //       };\n\n  //       setExamsWithSubjects((prevExams) =>\n  //         prevExams.map((exam) =>\n  //           exam.examId === selectedExam.examId ? updatedExam : exam\n  //         )\n  //       );\n  //       setSelectedExam(null);\n\n  //       // Send a request to update the exam data in the database\n  //       axios.put(`http://localhost:3081/exams-edit/${selectedExam.examId}`, updatedExam)\n  //         .then((response) => {\n  //           console.log(`Exam with ID ${selectedExam.examId} updated in the database`);\n  //         })\n  //         .catch((error) => {\n  //           console.error('Error updating exam:', error);\n  //         });\n  //     }\n  //   };\n  const handleEdit = examId => {\n    const examToEdit = examsWithSubjects.find(exam => exam.examId === examId);\n    setSelectedExam(examToEdit);\n    setShowEditForm(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), formOpen ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Exam Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: examName,\n          onChange: e => setExamName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Subjects:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"subject-list\",\n        children: subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedSubjects.includes(subject.subjectId),\n              onChange: () => handleCheckboxChange(subject.subjectId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), subject.subjectName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)\n        }, subject.subjectId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: submitting,\n        children: \"Create Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormOpen(true),\n      children: \"+Add Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), showSuccessPopup && /*#__PURE__*/_jsxDEV(SuccessPopup, {\n      onClose: closeSuccessPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Exams with Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Serial no\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exam Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subjects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: examsWithSubjects.map(exam => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.examId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: showEditForm && selectedExam && selectedExam.examId === exam.examId ? /*#__PURE__*/_jsxDEV(EditForm, {\n                exam: exam,\n                onClose: () => setShowEditForm(false),\n                onUpdate: updatedData => {\n                  // Handle data update here, then close the form\n                  setShowEditForm(false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 9\n              }, this) : exam.examName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.startDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.endDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(exam.examId),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 5\n            }, this)]\n          }, exam.examId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 3\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(Examcreation, \"rcDfEu+iWvyMUYxOpCrE9Dl9wvA=\");\n_c = Examcreation;\nexport default Examcreation;\nvar _c;\n$RefreshReg$(_c, \"Examcreation\");","map":{"version":3,"names":["React","useState","useEffect","axios","SuccessPopup","EditForm","jsxDEV","_jsxDEV","Examcreation","_s","examName","setExamName","startDate","setStartDate","endDate","setEndDate","selectedSubjects","setSelectedSubjects","subjects","setSubjects","submitting","setSubmitting","formOpen","setFormOpen","showSuccessPopup","setShowSuccessPopup","examsWithSubjects","setExamsWithSubjects","showEditForm","setShowEditForm","selectedExam","setSelectedExam","resetForm","get","then","response","data","catch","error","console","handleCheckboxChange","subjectId","prevSelected","includes","filter","id","handleSubmit","e","preventDefault","examData","post","log","closeSuccessPopup","handleEdit","examId","examToEdit","find","exam","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","className","map","subject","checked","subjectName","disabled","onClick","onClose","onUpdate","updatedData","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/new admin project/client/src/components/Examcreation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './admin.css'\r\nimport SuccessPopup from './SuccessPopup';\r\nimport EditForm from './EditForm';\r\nfunction Examcreation() {\r\n    const [examName, setExamName] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [showSuccessPopup, setShowSuccessPopup] = useState(false);\r\n    const [examsWithSubjects, setExamsWithSubjects] = useState([]);\r\n    // const [isEditing, setIsEditing] = useState(false);\r\n    // const [editedExam, setEditedExam] = useState({});\r\n    // const [editedData, setEditedData] = useState({});\r\n    // const [editedSubjects, setEditedSubjects] = useState([]);\r\n    // const [isEditingSubjects, setIsEditingSubjects] = useState(false);\r\n    // const [selectedExam, setSelectedExam] = useState(null);\r\n    const [showEditForm, setShowEditForm] = useState(false);\r\n    const [selectedExam, setSelectedExam] = useState(null);\r\n    const resetForm = () => {\r\n        setExamName('');\r\n        setStartDate('');\r\n        setEndDate('');\r\n        setSelectedSubjects([]);\r\n    };\r\n    useEffect(() => {\r\n        // Fetch subjects from the backend when the component mounts\r\n        axios.get('http://localhost:3081/subjects')\r\n            .then(response => {\r\n                setSubjects(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching subjects:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleCheckboxChange = (subjectId) => {\r\n        // Toggle the selection of subjects\r\n        setSelectedSubjects((prevSelected) => {\r\n            if (prevSelected.includes(subjectId)) {\r\n                return prevSelected.filter((id) => id !== subjectId);\r\n            } else {\r\n                return [...prevSelected, subjectId];\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSubmitting(true);\r\n\r\n        const examData = {\r\n            examName,\r\n            startDate,\r\n            endDate,\r\n            selectedSubjects,\r\n        };\r\n\r\n        axios.post('http://localhost:3081/exams', examData)\r\n            .then(response => {\r\n                console.log('Exam created:', response.data);\r\n                // Reset form fields and state as needed\r\n                setSubmitting(false);\r\n                resetForm();\r\n                setShowSuccessPopup(true);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error creating exam:', error);\r\n                setSubmitting(false);\r\n            });\r\n    };\r\n    const closeSuccessPopup = () => {\r\n        setShowSuccessPopup(false);\r\n    };\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3081/exams-with-subjects')\r\n            .then(response => {\r\n                setExamsWithSubjects(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    }, []);\r\n\r\n//     const handleDelete = (examId) => {\r\n//         // Handle the \"Delete\" action for the given examId on the client side\r\n//         const confirmDelete = window.confirm('Are you sure you want to delete this data?');\r\n//         if (confirmDelete) {\r\n//             setExamsWithSubjects(prevExams => prevExams.filter(exam => exam.examId !== examId));\r\n\r\n//             // Send a request to delete the exam from the server\r\n//             axios.delete(`http://localhost:3081/exams/${examId}`)\r\n//                 .then(response => {\r\n//                     console.log(`Exam with ID ${examId} deleted from the database`);\r\n//                 })\r\n//                 .catch(error => {\r\n//                     console.error('Error deleting exam:', error);\r\n//                 });\r\n//         }\r\n//     };\r\n\r\n    \r\n// const handleEdit = (examId) => {\r\n//     // Find the exam to edit based on examId\r\n//     const examToEdit = examsWithSubjects.find((exam) => exam.examId === examId);\r\n//     setSelectedExam(examToEdit);\r\n  \r\n//     // Fetch the subjects for the selected exam\r\n//     axios.get(`http://localhost:3081/exams/${examId}/subjects`)\r\n//       .then((response) => {\r\n//         const selectedSubjects = response.data.map((subject) => subject.subjectName);\r\n//         setEditedSubjects(selectedSubjects);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('Error fetching subjects for the selected exam:', error);\r\n//       });\r\n  \r\n//     // Set the form fields in edit mode\r\n//     setEditedData({\r\n//       examName: examToEdit.examName,\r\n//       startDate: examToEdit.startDate,\r\n//       endDate: examToEdit.endDate,\r\n//     });\r\n//   };\r\n  \r\n//   // ...\r\n  \r\n//   // Update exam data (PUT request)\r\n//   const handleUpdate = () => {\r\n//     if (selectedExam) {\r\n//       // Update the edited data on the client side\r\n//       const updatedExam = {\r\n//         examId: selectedExam.examId,\r\n//         examName: editedData.examName,\r\n//         startDate: editedData.startDate,\r\n//         endDate: editedData.endDate,\r\n//         subjects: editedSubjects,\r\n//       };\r\n  \r\n//       setExamsWithSubjects((prevExams) =>\r\n//         prevExams.map((exam) =>\r\n//           exam.examId === selectedExam.examId ? updatedExam : exam\r\n//         )\r\n//       );\r\n//       setSelectedExam(null);\r\n  \r\n//       // Send a request to update the exam data in the database\r\n//       axios.put(`http://localhost:3081/exams-edit/${selectedExam.examId}`, updatedExam)\r\n//         .then((response) => {\r\n//           console.log(`Exam with ID ${selectedExam.examId} updated in the database`);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error('Error updating exam:', error);\r\n//         });\r\n//     }\r\n//   };\r\nconst handleEdit = (examId) => {\r\n    const examToEdit = examsWithSubjects.find((exam) => exam.examId === examId);\r\n    setSelectedExam(examToEdit);\r\n    setShowEditForm(true);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Create Exam</h2>\r\n      {formOpen ? (\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Exam Name:\r\n            <input type=\"text\" value={examName} onChange={(e) => setExamName(e.target.value)} />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Start Date:\r\n            <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            End Date:\r\n            <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n          </label>\r\n          <br />\r\n          <label>Subjects:</label>\r\n          <ul className=\"subject-list\">\r\n            {subjects.map(subject => (\r\n              <li key={subject.subjectId}>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedSubjects.includes(subject.subjectId)}\r\n                    onChange={() => handleCheckboxChange(subject.subjectId)}\r\n                  />\r\n                  {subject.subjectName}\r\n                </label>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button type=\"submit\" disabled={submitting}>Create Exam</button>\r\n        </form>\r\n      ) : (\r\n        <button onClick={() => setFormOpen(true)}>+Add Exam</button>\r\n      )}\r\n      {showSuccessPopup && <SuccessPopup onClose={closeSuccessPopup} />}\r\n\r\n      <div>\r\n        <h2>Exams with Subjects</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Serial no</th>\r\n              <th>Exam Name</th>\r\n              <th>Start Date</th>\r\n              <th>End Date</th>\r\n              <th>Subjects</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {examsWithSubjects.map((exam) => (\r\n  <tr key={exam.examId}>\r\n    <td>{exam.examId}</td>\r\n    <td>\r\n      {showEditForm && selectedExam && selectedExam.examId === exam.examId ? (\r\n        <EditForm\r\n          exam={exam}\r\n          onClose={() => setShowEditForm(false)}\r\n          onUpdate={(updatedData) => {\r\n            // Handle data update here, then close the form\r\n            setShowEditForm(false);\r\n          }}\r\n        />\r\n      ) : (\r\n        exam.examName\r\n      )}\r\n    </td>\r\n    <td>\r\n      {exam.startDate}\r\n    </td>\r\n    <td>\r\n      {exam.endDate}\r\n    </td>\r\n    <td>\r\n      <button onClick={() => handleEdit(exam.examId)}>Edit</button>\r\n    </td>\r\n    <td>{/* <td>\r\n                                    <button onClick={() => handleDelete(exam.examId)}>Delete</button>\r\n                                </td> */}</td>\r\n  </tr>\r\n))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Examcreation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}