{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new admin project\\\\client\\\\src\\\\components\\\\Coursecreation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Coursecreation = () => {\n  _s();\n  const [typeOfTest, setTypeOfTest] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [selectedexams, setSelectedexams] = useState('');\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [typeofQuestion, setTypeofQuestion] = useState([]);\n  const [selectedtypeofQuestion, setSelectedtypeofQuestion] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [subjectsData, setSubjectsData] = useState([]);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    courseName: '',\n    examId: '',\n    typeOfTestId: '',\n    questiontypes: '',\n    courseStartDate: '',\n    courseEndDate: '',\n    cost: '',\n    discount: '',\n    discountAmount: '',\n    totalPrice: ''\n  });\n  useEffect(() => {\n    const fetchTypeOfTest = async () => {\n      try {\n        const response = await fetch('http://localhost:3081/type_of_tests');\n        const result = await response.json();\n        setTypeOfTest(result);\n      } catch (error) {\n        console.error('Error fetching Type of questions:', error);\n      }\n    };\n    fetchTypeOfTest();\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3081/courese-exams').then(response => response.json()).then(data => {\n      setExams(data);\n    }).catch(error => console.error('Error fetching exams:', error));\n  }, []);\n  const handleexams = async event => {\n    const selectedExamId = event.target.value;\n    try {\n      const response = await fetch(`http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`);\n      const data = await response.json();\n      console.log('Subjects Data:', data); // Debugging line\n      setSubjectsData(data); // Update subjectsData state\n      setSelectedSubjects([]); // Reset selected subjects\n    } catch (error) {\n      console.error('Error fetching subjects:', error);\n    }\n    setSelectedexams(selectedExamId);\n  };\n  const handleSubjectChange = (event, subjectId) => {\n    const {\n      checked\n    } = event.target;\n    // Fetch the subject details from subjectsData using subjectId\n    const subject = subjectsData.find(subj => subj.subjectId === subjectId);\n    if (subject) {\n      // If checked, add the subject to the selectedSubjects array\n      // If unchecked, remove the subject from the selectedSubjects array\n      setSelectedSubjects(prevSelectedSubjects => {\n        if (checked) {\n          return [...prevSelectedSubjects, subjectId];\n        } else {\n          return prevSelectedSubjects.filter(id => id !== subjectId);\n        }\n      });\n    }\n  };\n  const handleQuestionChange = (event, questionTypeId) => {\n    const {\n      checked\n    } = event.target;\n    setSelectedtypeofQuestion(prevSelectedQuestions => {\n      if (checked) {\n        return [...prevSelectedQuestions, questionTypeId];\n      } else {\n        return prevSelectedQuestions.filter(id => id !== questionTypeId);\n      }\n    });\n  };\n  useEffect(() => {\n    const fetchTypeOfQuestion = async () => {\n      try {\n        const response = await fetch('http://localhost:3081/type_of_questions');\n        const result = await response.json();\n        setTypeofQuestion(result);\n      } catch (error) {\n        console.error('Error fetching Type of questions:', error);\n      }\n    };\n    fetchTypeOfQuestion();\n  }, [handleQuestionChange]);\n  const handleStartDateChange = e => {\n    const formattedDate = e.target.value;\n    setStartDate(formattedDate);\n  };\n  const handleEndDateChange = e => {\n    const formattedDate = e.target.value;\n    setEndDate(formattedDate);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'cost' || name === 'discount') {\n      const cost = name === 'cost' ? parseFloat(value) : formData.cost;\n      const discount = name === 'discount' ? parseFloat(value) : formData.discount;\n      const discountAmount = !isNaN(cost) && !isNaN(discount) ? cost * discount / 100 : '';\n      const totalPrice = !isNaN(cost) && !isNaN(discountAmount) ? cost - discountAmount : '';\n      setFormData({\n        ...formData,\n        typeOfTestId: value,\n        examId: selectedexams,\n        subjects: selectedSubjects,\n        typeofQuestion: selectedtypeofQuestion,\n        courseStartDate: startDate,\n        courseEndDate: endDate,\n        cost: cost,\n        discount: discount,\n        discountAmount: discountAmount,\n        totalPrice: totalPrice\n      });\n    } else if (name === 'courseStartDate' || name === 'courseEndDate') {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prepare the data for submission\n    const data = {\n      ...formData,\n      typeOfTest,\n      examId: selectedexams,\n      subjects: selectedSubjects,\n      typeofQuestion: selectedtypeofQuestion // Assuming selectedtypeofQuestion is an array\n    };\n\n    // Submit the data to the server\n    try {\n      const response = await fetch('http://localhost:3081/course-creation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n\n      // Check if the result contains the expected structure\n      if (result && result.courseCreationId) {\n        const courseCreationId = result.courseCreationId;\n\n        // Use the courseCreationId in the second fetch to add subjects\n        const subjectsResponse = await fetch('http://localhost:3081/course_type_of_question', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            courseCreationId,\n            subjectIds: selectedSubjects,\n            quesionTypeIds: selectedtypeofQuestion\n          })\n        });\n        const subjectsResult = await subjectsResponse.json();\n        console.log('Subjects Result:', subjectsResult);\n        console.log(result);\n\n        // Handle success or show a success message to the user\n        // Adjust the condition based on the actual structure of the response\n        if (result.success) {\n          console.log('Course created successfully');\n        } else {\n          console.log('Failed to create course:', result.error);\n        }\n      } else {\n        console.log('Failed to create course. Unexpected response:', result);\n      }\n    } catch (error) {\n      console.error('Error submitting course data:', error);\n      // Handle error or show an error message to the user\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"courseName\",\n          children: \"Course Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"courseName\",\n          name: \"courseName\",\n          value: formData.courseName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type of test:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.typeOfTestId,\n            name: \"typeOfTestId\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select type of test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 5\n            }, this), typeOfTest.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type.typeOfTestId,\n              children: type.typeOfTestName\n            }, type.typeOfTestId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 7\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Select Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exams\",\n            children: \"Select Exam:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"exams\",\n            value: selectedexams,\n            onChange: handleexams,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select exams\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 13\n            }, this), exams.map(exams => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: exams.examId,\n              children: exams.examName\n            }, exams.examId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Subjects:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 3\n          }, this), subjectsData.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `subject-${subject.subjectId}`,\n              name: `subject-${subject.subjectId}`,\n              value: subject.subjectId,\n              checked: selectedSubjects.includes(subject.subjectId),\n              onChange: e => handleSubjectChange(e, subject.subjectId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `subject-${subject.subjectId}`,\n              children: subject.subjectName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 7\n            }, this)]\n          }, subject.subjectId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 5\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"type of Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: typeofQuestion.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `question-${type.quesionTypeId}`,\n              name: `question-${type.quesionTypeId}`,\n              value: type.quesionTypeId,\n              checked: selectedtypeofQuestion.includes(type.quesionTypeId),\n              onChange: e => handleQuestionChange(e, type.quesionTypeId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `question-${type.quesionTypeId}`,\n              children: type.typeofQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 7\n            }, this)]\n          }, type.quesionTypeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Course Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"courseStartDate\",\n            children: \"Course Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"courseStartDate\",\n            name: \"courseStartDate\",\n            value: startDate,\n            onChange: handleStartDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"courseEndDate\",\n            children: \"Course End Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"courseEndDate\",\n            name: \"courseEndDate\",\n            value: endDate,\n            onChange: handleEndDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Cost and Discounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cost\",\n            children: \"Cost:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cost\",\n            name: \"cost\",\n            value: formData.cost,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"discount\",\n            children: \"Discount (%):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"discount\",\n            name: \"discount\",\n            value: formData.discount,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"discountAmount\",\n            children: \"Discount Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"discountAmount\",\n            name: \"discountAmount\",\n            value: formData.discountAmount,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"totalPrice\",\n            children: \"Total Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"totalPrice\",\n            name: \"totalPrice\",\n            value: formData.totalPrice,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(Coursecreation, \"ZHTi8qsyktc2ZyAKxa4k6EU8Z2w=\");\n_c = Coursecreation;\nexport default Coursecreation;\nvar _c;\n$RefreshReg$(_c, \"Coursecreation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Coursecreation","_s","typeOfTest","setTypeOfTest","exams","setExams","selectedexams","setSelectedexams","selectedSubjects","setSelectedSubjects","typeofQuestion","setTypeofQuestion","selectedtypeofQuestion","setSelectedtypeofQuestion","startDate","setStartDate","endDate","setEndDate","subjectsData","setSubjectsData","isFormOpen","setIsFormOpen","formData","setFormData","courseName","examId","typeOfTestId","questiontypes","courseStartDate","courseEndDate","cost","discount","discountAmount","totalPrice","fetchTypeOfTest","response","fetch","result","json","error","console","then","data","catch","handleexams","event","selectedExamId","target","value","log","handleSubjectChange","subjectId","checked","subject","find","subj","prevSelectedSubjects","filter","id","handleQuestionChange","questionTypeId","prevSelectedQuestions","fetchTypeOfQuestion","handleStartDateChange","e","formattedDate","handleEndDateChange","handleChange","name","parseFloat","isNaN","subjects","handleSubmit","preventDefault","method","headers","body","JSON","stringify","courseCreationId","subjectsResponse","subjectIds","quesionTypeIds","subjectsResult","success","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","map","typeOfTestName","examName","includes","subjectName","quesionTypeId","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/new admin project/client/src/components/Coursecreation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst Coursecreation = () => {\r\n  const [typeOfTest, setTypeOfTest] = useState([]);\r\n  const [exams, setExams] = useState([]);\r\n  const [selectedexams, setSelectedexams] = useState('');\r\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n  const [typeofQuestion, setTypeofQuestion] = useState([]);\r\n  const [selectedtypeofQuestion,setSelectedtypeofQuestion] = useState([]);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [subjectsData, setSubjectsData] = useState([]);\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n\r\n\r\n const [formData, setFormData] = useState({\r\n  courseName: '',\r\n  examId: '',\r\n  typeOfTestId: '',\r\n  questiontypes:'',\r\n  courseStartDate: '',\r\n  courseEndDate: '',\r\n  cost: '',\r\n  discount: '',\r\n  discountAmount: '',\r\n  totalPrice: '',\r\n\r\n});\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchTypeOfTest = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3081/type_of_tests');\r\n        const result = await response.json();\r\n        setTypeOfTest(result);\r\n      } catch (error) {\r\n        console.error('Error fetching Type of questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchTypeOfTest();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3081/courese-exams')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setExams(data);\r\n      })\r\n      .catch(error => console.error('Error fetching exams:', error));\r\n  }, []);\r\n  const handleexams = async (event) => {\r\n    const selectedExamId = event.target.value;\r\n    try {\r\n      const response = await fetch(`http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`);\r\n      const data = await response.json();\r\n      console.log('Subjects Data:', data); // Debugging line\r\n      setSubjectsData(data);  // Update subjectsData state\r\n      setSelectedSubjects([]); // Reset selected subjects\r\n    } catch (error) {\r\n      console.error('Error fetching subjects:', error);\r\n    }\r\n  \r\n    setSelectedexams(selectedExamId);\r\n  };\r\n  \r\n\r\n\r\n  const handleSubjectChange = (event, subjectId) => {\r\n    const { checked } = event.target;\r\n    // Fetch the subject details from subjectsData using subjectId\r\n    const subject = subjectsData.find((subj) => subj.subjectId === subjectId);\r\n\r\n    if (subject) {\r\n      // If checked, add the subject to the selectedSubjects array\r\n      // If unchecked, remove the subject from the selectedSubjects array\r\n      setSelectedSubjects((prevSelectedSubjects) => {\r\n        if (checked) {\r\n          return [...prevSelectedSubjects, subjectId];\r\n        } else {\r\n          return prevSelectedSubjects.filter((id) => id !== subjectId);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const handleQuestionChange = (event, questionTypeId) => {\r\n    const { checked } = event.target;\r\n  \r\n    setSelectedtypeofQuestion((prevSelectedQuestions) => {\r\n      if (checked) {\r\n        return [...prevSelectedQuestions, questionTypeId];\r\n      } else {\r\n        return prevSelectedQuestions.filter((id) => id !== questionTypeId);\r\n      }\r\n    });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const fetchTypeOfQuestion = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3081/type_of_questions');\r\n        const result = await response.json();\r\n        setTypeofQuestion(result);\r\n      } catch (error) {\r\n        console.error('Error fetching Type of questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchTypeOfQuestion();\r\n  }, [handleQuestionChange]);\r\n\r\n\r\n  const handleStartDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setStartDate(formattedDate);\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setEndDate(formattedDate);\r\n  };\r\n\r\n  \r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'cost' || name === 'discount') {\r\n      const cost = name === 'cost' ? parseFloat(value) : formData.cost;\r\n      const discount = name === 'discount' ? parseFloat(value) : formData.discount;\r\n      const discountAmount = (!isNaN(cost) && !isNaN(discount)) ? (cost * discount) / 100 : '';\r\n      const totalPrice = (!isNaN(cost) && !isNaN(discountAmount)) ? cost - discountAmount : '';\r\n      setFormData({\r\n        ...formData,\r\n        typeOfTestId: value,\r\n        examId: selectedexams,\r\n        subjects: selectedSubjects,\r\n        typeofQuestion: selectedtypeofQuestion,\r\n        courseStartDate: startDate,\r\n        courseEndDate: endDate,\r\n        cost: cost,\r\n        discount: discount,\r\n        discountAmount: discountAmount,\r\n        totalPrice: totalPrice,\r\n\r\n      });\r\n    } else if (name === 'courseStartDate' || name === 'courseEndDate') {\r\n      setFormData({ ...formData, [name]: value });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Prepare the data for submission\r\n    const data = {\r\n      ...formData,\r\n      typeOfTest,\r\n      examId: selectedexams,\r\n      subjects: selectedSubjects,\r\n      typeofQuestion: selectedtypeofQuestion, // Assuming selectedtypeofQuestion is an array\r\n    };\r\n  \r\n    // Submit the data to the server\r\n    try {\r\n      const response = await fetch('http://localhost:3081/course-creation', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n  \r\n      const result = await response.json();\r\n  \r\n      // Check if the result contains the expected structure\r\n      if (result && result.courseCreationId) {\r\n        const courseCreationId = result.courseCreationId;\r\n  \r\n        // Use the courseCreationId in the second fetch to add subjects\r\n        const subjectsResponse = await fetch('http://localhost:3081/course_type_of_question', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            courseCreationId,\r\n            subjectIds: selectedSubjects,\r\n            quesionTypeIds: selectedtypeofQuestion,\r\n          }),\r\n        });\r\n  \r\n        const subjectsResult = await subjectsResponse.json();\r\n        console.log('Subjects Result:', subjectsResult);\r\n        console.log(result);\r\n  \r\n        // Handle success or show a success message to the user\r\n        // Adjust the condition based on the actual structure of the response\r\n        if (result.success) {\r\n          console.log('Course created successfully');\r\n        } else {\r\n          console.log('Failed to create course:', result.error);\r\n        }\r\n      } else {\r\n        console.log('Failed to create course. Unexpected response:', result);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting course data:', error);\r\n      // Handle error or show an error message to the user\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n      <div>\r\n         <label htmlFor=\"courseName\">Course Name:</label>\r\n         <input\r\n            type=\"text\"\r\n            id=\"courseName\"\r\n            name=\"courseName\"\r\n            value={formData.courseName}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <br />\r\n        <fieldset>\r\n        <label>\r\n          Type of test:\r\n        </label>\r\n        <div>\r\n  <select\r\n    value={formData.typeOfTestId}\r\n    name=\"typeOfTestId\"\r\n    onChange={handleChange}\r\n  >\r\n    <option value=\"\">Select type of test</option>\r\n    {typeOfTest.map((type) => (\r\n      <option key={type.typeOfTestId} value={type.typeOfTestId}>\r\n        {type.typeOfTestName}\r\n      </option>\r\n    ))}\r\n  </select>\r\n</div>\r\n        </fieldset>\r\n        <br />\r\n        <fieldset>\r\n        <legend>Select Exam</legend>\r\n        <div>\r\n          <label htmlFor=\"exams\">Select Exam:</label>\r\n          <select id=\"exams\" value={selectedexams} onChange={handleexams}>\r\n            <option value=\"\">Select exams</option>\r\n            {exams.map(exams => (\r\n              <option key={exams.examId} value={exams.examId}>\r\n                {exams.examName}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n         <br />\r\n         <div>\r\n  <label>Select Subjects:</label>\r\n  {subjectsData.map((subject) => (\r\n    <div key={subject.subjectId}>\r\n     <input\r\n  type=\"checkbox\"\r\n  id={`subject-${subject.subjectId}`}\r\n  name={`subject-${subject.subjectId}`}\r\n  value={subject.subjectId}\r\n  checked={selectedSubjects.includes(subject.subjectId)}\r\n  onChange={(e) => handleSubjectChange(e, subject.subjectId)}\r\n/>\r\n      <label htmlFor={`subject-${subject.subjectId}`}>{subject.subjectName}</label>\r\n    </div>\r\n  ))}\r\n</div>\r\n        </fieldset>\r\n         <br />\r\n         <fieldset>\r\n        <label>\r\n          type of Questions:\r\n        </label>\r\n        <div>\r\n  {typeofQuestion.map((type) => (\r\n    <div key={type.quesionTypeId}>\r\n      <input\r\n        type=\"checkbox\"\r\n        id={`question-${type.quesionTypeId}`}\r\n        name={`question-${type.quesionTypeId}`}\r\n        value={type.quesionTypeId}\r\n        checked={selectedtypeofQuestion.includes(type.quesionTypeId)}\r\n        onChange={(e) => handleQuestionChange(e, type.quesionTypeId)}\r\n      />\r\n      <label htmlFor={`question-${type.quesionTypeId}`}>{type.typeofQuestion}</label>\r\n    </div>\r\n  ))}\r\n</div>\r\n        </fieldset>\r\n        <br />\r\n        <fieldset>\r\n        <legend>Course Duration</legend>\r\n        <div>\r\n          <label htmlFor=\"courseStartDate\">Course Start Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"courseStartDate\"\r\n            name=\"courseStartDate\"\r\n            value={startDate}\r\n            onChange={handleStartDateChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"courseEndDate\">Course End Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"courseEndDate\"\r\n            name=\"courseEndDate\"\r\n            value={endDate}\r\n            onChange={handleEndDateChange}\r\n          />\r\n        </div>\r\n        </fieldset>\r\n         <br />\r\n        <fieldset>\r\n        <legend>Cost and Discounts</legend>\r\n         <div>\r\n          <label htmlFor=\"cost\">Cost:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"cost\"\r\n            name=\"cost\"\r\n            value={formData.cost}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n       <div>\r\n          <label htmlFor=\"discount\">Discount (%):</label>\r\n        <input\r\n            type=\"number\"\r\n            id=\"discount\"\r\n            name=\"discount\"\r\n            value={formData.discount}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"discountAmount\">Discount Amount:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"discountAmount\"\r\n            name=\"discountAmount\"\r\n            value={formData.discountAmount}\r\n            readOnly \r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"totalPrice\">Total Price:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"totalPrice\"\r\n            name=\"totalPrice\"\r\n            value={formData.totalPrice}\r\n            readOnly\r\n          />\r\n        </div>\r\n        </fieldset>\r\n        <button type=\"submit\">Create Course</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Coursecreation"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}