{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new admin project\\\\client\\\\src\\\\components\\\\Examupdate.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Examupdate = () => {\n  _s();\n  const {\n    examId\n  } = useParams();\n  const [examName, setExamName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [subjects, setSubjects] = useState([]);\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:3081/update/' + examId).then(res => {\n      setExamName(res.data[0].examName);\n      setStartDate(res.data[0].startDate);\n      setEndDate(res.data[0].endDate);\n    }).catch(err => console.log(err));\n\n    // Fetch subjects\n    axios.get('http://localhost:3081/subjects').then(res => {\n      var _res$data$;\n      setSubjects(res.data);\n      // Assuming selectedSubjects are returned from the server\n      setSelectedSubjects(((_res$data$ = res.data[0]) === null || _res$data$ === void 0 ? void 0 : _res$data$.selectedSubjects) || []);\n    }).catch(err => console.log(err));\n  }, []);\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is 0-based\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n  const navigate = useNavigate();\n  const hanldesubmit = e => {\n    e.preventDefault();\n    axios.put(`http://localhost:3081/updatedata/${examId}`, {\n      examName,\n      startDate,\n      endDate,\n      selectedSubjects\n    }).then(res => {\n      if (res.data.updated) {\n        navigate('/exams');\n      } else {\n        alert('Data is not updated');\n      }\n    });\n  };\n  const handleCheckboxChange = subjectId => {\n    const updatedSelectedSubjects = selectedSubjects.includes(subjectId) ? selectedSubjects.filter(id => id !== subjectId) : [...selectedSubjects, subjectId];\n    setSelectedSubjects(updatedSelectedSubjects);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: hanldesubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Exam Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: examName,\n          onChange: e => setExamName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: formatDate(startDate),\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: formatDate(endDate),\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Subjects:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"subject-list\",\n        children: subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedSubjects.includes(subject.subjectId),\n              onChange: () => handleCheckboxChange(subject.subjectId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 9\n            }, this), subject.subjectName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this)\n        }, subject.subjectId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Examupdate, \"ndPtarE6UI0cwuM2UIBjcHTIgEw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Examupdate;\nexport default Examupdate;\nvar _c;\n$RefreshReg$(_c, \"Examupdate\");","map":{"version":3,"names":["axios","React","useEffect","useState","useNavigate","useParams","jsxDEV","_jsxDEV","Examupdate","_s","examId","examName","setExamName","startDate","setStartDate","endDate","setEndDate","subjects","setSubjects","selectedSubjects","setSelectedSubjects","get","then","res","data","catch","err","console","log","_res$data$","formatDate","dateString","date","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","navigate","hanldesubmit","e","preventDefault","put","updated","alert","handleCheckboxChange","subjectId","updatedSelectedSubjects","includes","filter","id","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","className","map","subject","checked","subjectName","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/new admin project/client/src/components/Examupdate.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React ,{useEffect, useState}from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nconst Examupdate = () => {\r\nconst {examId} =useParams();\r\nconst [examName,setExamName]=useState('');\r\nconst [startDate,setStartDate]=useState('');\r\nconst [endDate,setEndDate]=useState('');\r\n\r\nconst [subjects, setSubjects] = useState([]);\r\nconst [selectedSubjects, setSelectedSubjects] = useState([]);\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n axios.get('http://localhost:3081/update/' +examId)\r\n .then(res => {\r\n    setExamName(res.data[0].examName);\r\n    setStartDate(res.data[0].startDate);\r\n    setEndDate(res.data[0].endDate);\r\n })\r\n .catch(err => console.log(err));\r\n\r\n  // Fetch subjects\r\n  axios.get('http://localhost:3081/subjects')\r\n  .then(res => {\r\n    setSubjects(res.data);\r\n    // Assuming selectedSubjects are returned from the server\r\n    setSelectedSubjects(res.data[0]?.selectedSubjects || []);\r\n  })\r\n  .catch(err => console.log(err));\r\n},[])\r\n\r\nfunction formatDate(dateString) {\r\n    const date = new Date(dateString);\r\n    const year = date.getFullYear();\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is 0-based\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  }\r\nconst navigate =useNavigate();\r\n const hanldesubmit = (e)=>{\r\n    e.preventDefault();\r\n    axios.put(`http://localhost:3081/updatedata/${examId}`, { examName, startDate, endDate ,selectedSubjects})\r\n    .then(res => {\r\n      if (res.data.updated) {\r\n        navigate('/exams');\r\n      } else {\r\n        alert('Data is not updated');\r\n      }\r\n    })\r\n    }\r\n\r\n\r\n    const handleCheckboxChange = (subjectId) => {\r\n        const updatedSelectedSubjects = selectedSubjects.includes(subjectId)\r\n          ? selectedSubjects.filter(id => id !== subjectId)\r\n          : [...selectedSubjects, subjectId];\r\n      \r\n        setSelectedSubjects(updatedSelectedSubjects);\r\n      };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div> \r\n    <form onSubmit={hanldesubmit}>\r\n            \r\n    <label>\r\n      Exam Name:\r\n      <input type=\"text\" value={examName} onChange={e =>setExamName(e.target.value)}/>\r\n    </label>\r\n\r\n    <br />\r\n\r\n    <label>\r\n      Start Date:\r\n      <input type=\"date\" value={formatDate(startDate)} onChange={e =>setStartDate(e.target.value)}/>\r\n    </label>\r\n\r\n    <br />\r\n\r\n    <label>\r\n      End Date:\r\n      <input type=\"date\" value={formatDate(endDate)} onChange={e =>setEndDate(e.target.value)}/>\r\n    </label>\r\n\r\n    <br />\r\n\r\n    <label>Subjects:</label>\r\n    <ul className=\"subject-list\">\r\n  {subjects.map(subject => (\r\n    <li key={subject.subjectId}>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={selectedSubjects.includes(subject.subjectId)}\r\n          onChange={() => handleCheckboxChange(subject.subjectId)}\r\n        />\r\n        {subject.subjectName}\r\n      </label>\r\n    </li>\r\n  ))}\r\n</ul>\r\n    <button type=\"submit\">Update</button>\r\n  </form></div>\r\n  )\r\n}\r\n\r\nexport default Examupdate"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}