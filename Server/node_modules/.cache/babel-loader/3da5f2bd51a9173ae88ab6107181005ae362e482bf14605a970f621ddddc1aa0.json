{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new admin project\\\\client\\\\src\\\\components\\\\Examcreation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './admin.css';\nimport SuccessPopup from './SuccessPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Examcreation() {\n  _s();\n  const [examName, setExamName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [submitting, setSubmitting] = useState(false);\n  const [formOpen, setFormOpen] = useState(false);\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\n  const [examsWithSubjects, setExamsWithSubjects] = useState([]);\n  // const [isEditing, setIsEditing] = useState(false);\n  const [editedExam, setEditedExam] = useState({});\n  const [editedData, setEditedData] = useState({});\n  const [editedSubjects, setEditedSubjects] = useState([]);\n  const [isEditingSubjects, setIsEditingSubjects] = useState(false);\n  const [selectedExam, setSelectedExam] = useState(null);\n  const resetForm = () => {\n    setExamName('');\n    setStartDate('');\n    setEndDate('');\n    setSelectedSubjects([]);\n  };\n  useEffect(() => {\n    // Fetch subjects from the backend when the component mounts\n    axios.get('http://localhost:3081/subjects').then(response => {\n      setSubjects(response.data);\n    }).catch(error => {\n      console.error('Error fetching subjects:', error);\n    });\n  }, []);\n  const handleCheckboxChange = subjectId => {\n    // Toggle the selection of subjects\n    setSelectedSubjects(prevSelected => {\n      if (prevSelected.includes(subjectId)) {\n        return prevSelected.filter(id => id !== subjectId);\n      } else {\n        return [...prevSelected, subjectId];\n      }\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitting(true);\n    const examData = {\n      examName,\n      startDate,\n      endDate,\n      selectedSubjects\n    };\n    axios.post('http://localhost:3081/exams', examData).then(response => {\n      console.log('Exam created:', response.data);\n      // Reset form fields and state as needed\n      setSubmitting(false);\n      resetForm();\n      setShowSuccessPopup(true);\n    }).catch(error => {\n      console.error('Error creating exam:', error);\n      setSubmitting(false);\n    });\n  };\n  const closeSuccessPopup = () => {\n    setShowSuccessPopup(false);\n  };\n  useEffect(() => {\n    axios.get('http://localhost:3081/exams-with-subjects').then(response => {\n      setExamsWithSubjects(response.data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  const handleDelete = examId => {\n    // Handle the \"Delete\" action for the given examId on the client side\n    const confirmDelete = window.confirm('Are you sure you want to delete this data?');\n    if (confirmDelete) {\n      setExamsWithSubjects(prevExams => prevExams.filter(exam => exam.examId !== examId));\n\n      // Send a request to delete the exam from the server\n      axios.delete(`http://localhost:3081/exams/${examId}`).then(response => {\n        console.log(`Exam with ID ${examId} deleted from the database`);\n      }).catch(error => {\n        console.error('Error deleting exam:', error);\n      });\n    }\n  };\n  const handleEdit = examId => {\n    // Find the exam to edit based on examId\n    const examToEdit = examsWithSubjects.find(exam => exam.examId === examId);\n    setSelectedExam(examToEdit);\n\n    // Fetch the subjects for the selected exam\n    axios.get(`http://localhost:3081/exams/${examId}/subjects`).then(response => {\n      const selectedSubjects = response.data.map(subject => subject.subjectName);\n      setEditedSubjects(selectedSubjects);\n    }).catch(error => {\n      console.error('Error fetching subjects for the selected exam:', error);\n    });\n\n    // Set the form fields in edit mode\n    setEditedData({\n      examName: examToEdit.examName,\n      startDate: examToEdit.startDate,\n      endDate: examToEdit.endDate,\n      subjects: editedSubjects\n    });\n  };\n\n  // ...\n\n  // Update exam data (PUT request)\n  const handleUpdate = () => {\n    // Update the edited data on the client side\n    setExamsWithSubjects(prevExams => prevExams.map(exam => exam.examId === selectedExam.examId ? {\n      ...exam,\n      ...editedData,\n      subjects: editedSubjects\n    } : exam));\n    setSelectedExam(null);\n\n    // Send a request to update the exam data in the database\n    axios.put(`http://localhost:3081/exams-edit/${selectedExam.examId}`, {\n      ...editedData\n    }).then(response => {\n      console.log(`Exam with ID ${selectedExam.examId} updated in the database`);\n    }).catch(error => {\n      console.error('Error updating exam:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), formOpen ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Exam Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: examName,\n          onChange: e => setExamName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Subjects:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"subject-list\",\n        children: subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedSubjects.includes(subject.subjectId),\n              onChange: () => handleCheckboxChange(subject.subjectId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this), subject.subjectName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)\n        }, subject.subjectId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: submitting,\n        children: \"Create Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormOpen(true),\n      children: \"+Add Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), showSuccessPopup && /*#__PURE__*/_jsxDEV(SuccessPopup, {\n      onClose: closeSuccessPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Exams with Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Serial no\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exam Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subjects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: examsWithSubjects.map(exam => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.examId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedExam === exam ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedData.examName,\n                onChange: e => setEditedData({\n                  ...editedData,\n                  examName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this) : exam.examName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedExam === exam ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: editedData.startDate,\n                onChange: e => setEditedData({\n                  ...editedData,\n                  startDate: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this) : exam.startDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedExam === exam ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: editedData.endDate,\n                onChange: e => setEditedData({\n                  ...editedData,\n                  endDate: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this) : exam.endDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isEditingSubjects ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [Array.isArray(editedSubjects) && editedSubjects.map((subject, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: subject,\n                    onChange: e => setEditedSubjects(prevSubjects => {\n                      const updatedSubjects = [...prevSubjects];\n                      updatedSubjects[index] = e.target.value;\n                      return updatedSubjects;\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 29\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 27\n                }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleUpdate,\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setIsEditingSubjects(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [Array.isArray(exam.subjects) && exam.subjects.map((subject, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: subject\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 27\n                }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setIsEditingSubjects(true),\n                  children: \"Edit Subjects\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedExam === exam ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleUpdate,\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setSelectedExam(null),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(exam.examId),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)]\n          }, exam.examId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(Examcreation, \"0sWaZlM8fnGUjhHDBp66a508/dM=\");\n_c = Examcreation;\nexport default Examcreation;\n{/* <td>\r\n                                    <button onClick={() => handleDelete(exam.examId)}>Delete</button>\r\n                                </td> */}\nvar _c;\n$RefreshReg$(_c, \"Examcreation\");","map":{"version":3,"names":["React","useState","useEffect","axios","SuccessPopup","jsxDEV","_jsxDEV","Examcreation","_s","examName","setExamName","startDate","setStartDate","endDate","setEndDate","selectedSubjects","setSelectedSubjects","subjects","setSubjects","submitting","setSubmitting","formOpen","setFormOpen","showSuccessPopup","setShowSuccessPopup","examsWithSubjects","setExamsWithSubjects","editedExam","setEditedExam","editedData","setEditedData","editedSubjects","setEditedSubjects","isEditingSubjects","setIsEditingSubjects","selectedExam","setSelectedExam","resetForm","get","then","response","data","catch","error","console","handleCheckboxChange","subjectId","prevSelected","includes","filter","id","handleSubmit","e","preventDefault","examData","post","log","closeSuccessPopup","handleDelete","examId","confirmDelete","window","confirm","prevExams","exam","delete","handleEdit","examToEdit","find","map","subject","subjectName","handleUpdate","put","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","className","checked","disabled","onClick","onClose","Array","isArray","index","prevSubjects","updatedSubjects","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/new admin project/client/src/components/Examcreation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './admin.css'\r\nimport SuccessPopup from './SuccessPopup';\r\nfunction Examcreation() {\r\n    const [examName, setExamName] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [showSuccessPopup, setShowSuccessPopup] = useState(false);\r\n    const [examsWithSubjects, setExamsWithSubjects] = useState([]);\r\n    // const [isEditing, setIsEditing] = useState(false);\r\n    const [editedExam, setEditedExam] = useState({});\r\n    const [editedData, setEditedData] = useState({});\r\n    const [editedSubjects, setEditedSubjects] = useState([]);\r\n    const [isEditingSubjects, setIsEditingSubjects] = useState(false);\r\n    const [selectedExam, setSelectedExam] = useState(null);\r\n\r\n    const resetForm = () => {\r\n        setExamName('');\r\n        setStartDate('');\r\n        setEndDate('');\r\n        setSelectedSubjects([]);\r\n    };\r\n    useEffect(() => {\r\n        // Fetch subjects from the backend when the component mounts\r\n        axios.get('http://localhost:3081/subjects')\r\n            .then(response => {\r\n                setSubjects(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching subjects:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleCheckboxChange = (subjectId) => {\r\n        // Toggle the selection of subjects\r\n        setSelectedSubjects((prevSelected) => {\r\n            if (prevSelected.includes(subjectId)) {\r\n                return prevSelected.filter((id) => id !== subjectId);\r\n            } else {\r\n                return [...prevSelected, subjectId];\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSubmitting(true);\r\n\r\n        const examData = {\r\n            examName,\r\n            startDate,\r\n            endDate,\r\n            selectedSubjects,\r\n        };\r\n\r\n        axios.post('http://localhost:3081/exams', examData)\r\n            .then(response => {\r\n                console.log('Exam created:', response.data);\r\n                // Reset form fields and state as needed\r\n                setSubmitting(false);\r\n                resetForm();\r\n                setShowSuccessPopup(true);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error creating exam:', error);\r\n                setSubmitting(false);\r\n            });\r\n    };\r\n    const closeSuccessPopup = () => {\r\n        setShowSuccessPopup(false);\r\n    };\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3081/exams-with-subjects')\r\n            .then(response => {\r\n                setExamsWithSubjects(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleDelete = (examId) => {\r\n        // Handle the \"Delete\" action for the given examId on the client side\r\n        const confirmDelete = window.confirm('Are you sure you want to delete this data?');\r\n        if (confirmDelete) {\r\n            setExamsWithSubjects(prevExams => prevExams.filter(exam => exam.examId !== examId));\r\n\r\n            // Send a request to delete the exam from the server\r\n            axios.delete(`http://localhost:3081/exams/${examId}`)\r\n                .then(response => {\r\n                    console.log(`Exam with ID ${examId} deleted from the database`);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error deleting exam:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    \r\nconst handleEdit = (examId) => {\r\n    // Find the exam to edit based on examId\r\n    const examToEdit = examsWithSubjects.find((exam) => exam.examId === examId);\r\n    setSelectedExam(examToEdit);\r\n  \r\n    // Fetch the subjects for the selected exam\r\n    axios.get(`http://localhost:3081/exams/${examId}/subjects`)\r\n      .then((response) => {\r\n        const selectedSubjects = response.data.map((subject) => subject.subjectName);\r\n        setEditedSubjects(selectedSubjects);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching subjects for the selected exam:', error);\r\n      });\r\n  \r\n    // Set the form fields in edit mode\r\n    setEditedData({\r\n      examName: examToEdit.examName,\r\n      startDate: examToEdit.startDate,\r\n      endDate: examToEdit.endDate,\r\n      subjects: editedSubjects,\r\n    });\r\n  };\r\n  \r\n  // ...\r\n  \r\n  // Update exam data (PUT request)\r\n  const handleUpdate = () => {\r\n    // Update the edited data on the client side\r\n    setExamsWithSubjects((prevExams) =>\r\n      prevExams.map((exam) =>\r\n        exam.examId === selectedExam.examId\r\n          ? { ...exam, ...editedData, subjects: editedSubjects }\r\n          : exam\r\n      )\r\n    );\r\n    setSelectedExam(null);\r\n  \r\n    // Send a request to update the exam data in the database\r\n    axios.put(`http://localhost:3081/exams-edit/${selectedExam.examId}`, {\r\n      ...editedData,\r\n    })\r\n      .then((response) => {\r\n        console.log(`Exam with ID ${selectedExam.examId} updated in the database`);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating exam:', error);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Create Exam</h2>\r\n      {formOpen ? (\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Exam Name:\r\n            <input type=\"text\" value={examName} onChange={(e) => setExamName(e.target.value)} />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Start Date:\r\n            <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            End Date:\r\n            <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n          </label>\r\n          <br />\r\n          <label>Subjects:</label>\r\n          <ul className=\"subject-list\">\r\n            {subjects.map(subject => (\r\n              <li key={subject.subjectId}>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedSubjects.includes(subject.subjectId)}\r\n                    onChange={() => handleCheckboxChange(subject.subjectId)}\r\n                  />\r\n                  {subject.subjectName}\r\n                </label>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button type=\"submit\" disabled={submitting}>Create Exam</button>\r\n        </form>\r\n      ) : (\r\n        <button onClick={() => setFormOpen(true)}>+Add Exam</button>\r\n      )}\r\n      {showSuccessPopup && <SuccessPopup onClose={closeSuccessPopup} />}\r\n\r\n      <div>\r\n        <h2>Exams with Subjects</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Serial no</th>\r\n              <th>Exam Name</th>\r\n              <th>Start Date</th>\r\n              <th>End Date</th>\r\n              <th>Subjects</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {examsWithSubjects.map(exam => (\r\n              <tr key={exam.examId}>\r\n                <td>{exam.examId}</td>\r\n                <td>\r\n                  {selectedExam === exam ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editedData.examName}\r\n                      onChange={(e) => setEditedData({ ...editedData, examName: e.target.value })}\r\n                    />\r\n                  ) : exam.examName}\r\n                </td>\r\n                <td>\r\n                  {selectedExam === exam ? (\r\n                    <input\r\n                      type=\"date\"\r\n                      value={editedData.startDate}\r\n                      onChange={(e) => setEditedData({ ...editedData, startDate: e.target.value })}\r\n                    />\r\n                  ) : exam.startDate}\r\n                </td>\r\n                <td>\r\n                  {selectedExam === exam ? (\r\n                    <input\r\n                      type=\"date\"\r\n                      value={editedData.endDate}\r\n                      onChange={(e) => setEditedData({ ...editedData, endDate: e.target.value })}\r\n                    />\r\n                  ) : exam.endDate}\r\n                </td>\r\n                <td>\r\n                  {isEditingSubjects ? (\r\n                    <div>\r\n                      {Array.isArray(editedSubjects) &&\r\n                        editedSubjects.map((subject, index) => (\r\n                          <div key={index}>\r\n                            <input\r\n                              type=\"text\"\r\n                              value={subject}\r\n                              onChange={(e) => setEditedSubjects((prevSubjects) => {\r\n                                const updatedSubjects = [...prevSubjects];\r\n                                updatedSubjects[index] = e.target.value;\r\n                                return updatedSubjects;\r\n                              })}\r\n                            />\r\n                          </div>\r\n                        ))}\r\n                      <button onClick={handleUpdate}>Update</button>\r\n                      <button onClick={() => setIsEditingSubjects(false)}>Cancel</button>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      {Array.isArray(exam.subjects) &&\r\n                        exam.subjects.map((subject, index) => (\r\n                          <div key={index}>{subject}</div>\r\n                        ))}\r\n                      <button onClick={() => setIsEditingSubjects(true)}>Edit Subjects</button>\r\n                    </div>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {selectedExam === exam ? (\r\n                    <div>\r\n                      <button onClick={handleUpdate}>Update</button>\r\n                      <button onClick={() => setSelectedExam(null)}>Cancel</button>\r\n                    </div>\r\n                  ) : (\r\n                    <button onClick={() => handleEdit(exam.examId)}>Edit</button>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Examcreation;\r\n{/* <td>\r\n                                    <button onClick={() => handleDelete(exam.examId)}>Delete</button>\r\n                                </td> */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}