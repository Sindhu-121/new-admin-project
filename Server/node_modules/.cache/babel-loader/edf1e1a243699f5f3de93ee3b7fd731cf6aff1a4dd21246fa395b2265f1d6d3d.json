{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new admin project\\\\client\\\\src\\\\components\\\\Coursecreation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './admin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Coursecreation = () => {\n  _s();\n  const [typeOfTest, setTypeOfTest] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [selectedexams, setSelectedexams] = useState('');\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [typeofQuestion, setTypeofQuestion] = useState([]);\n  const [selectedtypeofQuestion, setSelectedtypeofQuestion] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [subjectsData, setSubjectsData] = useState([]);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [courseData, setCourseData] = useState([]);\n  const toggleFormVisibility = () => {\n    setIsFormOpen(!isFormOpen);\n  };\n  const [formData, setFormData] = useState({\n    courseName: '',\n    examId: '',\n    typeOfTestId: '',\n    questiontypes: '',\n    courseStartDate: '',\n    courseEndDate: '',\n    cost: '',\n    discount: '',\n    discountAmount: '',\n    totalPrice: ''\n  });\n  useEffect(() => {\n    const fetchSelectedExam = async () => {\n      try {\n        const response = await fetch(`http://localhost:3081/courese-exams/${selectedexams}`);\n        const data = await response.json();\n        console.log('Fetched Selected Exam:', data);\n        // Now 'data' contains the selected exam details, including examName\n      } catch (error) {\n        console.error('Error fetching selected exam:', error);\n      }\n    };\n\n    // Call the function when selectedexams changes\n    fetchSelectedExam();\n  }, [selectedexams]);\n  useEffect(() => {\n    const fetchCourseData = async () => {\n      try {\n        console.log('Before fetching course data. Selected Exam ID:', selectedexams);\n        const response = await fetch('http://localhost:3081/course_creation_table');\n        const result = await response.json();\n\n        // Ensure that subjects and typeofQuestion are arrays\n        const coursesWithArrays = result.map(course => ({\n          ...course,\n          subjects: course.subjects ? course.subjects.split(', ') : [],\n          typeofQuestion: course.question_types ? course.question_types.split(', ') : []\n        }));\n        console.log('Fetched Course Data:', coursesWithArrays);\n        setCourseData(coursesWithArrays);\n      } catch (error) {\n        console.error('Error fetching course data:', error);\n      }\n    };\n    fetchCourseData();\n  }, []);\n  useEffect(() => {\n    const fetchTypeOfTest = async () => {\n      try {\n        const response = await fetch('http://localhost:3081/type_of_tests');\n        const result = await response.json();\n        setTypeOfTest(result);\n      } catch (error) {\n        console.error('Error fetching Type of questions:', error);\n      }\n    };\n    fetchTypeOfTest();\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3081/courese-exams').then(response => response.json()).then(data => {\n      setExams(data);\n    }).catch(error => console.error('Error fetching exams:', error));\n  }, []);\n  const handleexams = async event => {\n    const selectedExamId = event.target.value;\n    console.log('Selected Exam ID:', selectedExamId);\n    setSelectedexams(selectedExamId);\n    console.log('Selected Exam ID (after setting):', selectedexams);\n    try {\n      const response = await fetch(`http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`);\n      const data = await response.json();\n      console.log('Subjects Data:', data); // Log the fetched data\n      setSubjectsData(data); // Update subjectsData state\n      setSelectedSubjects([]); // Reset selected subjects\n    } catch (error) {\n      console.error('Error fetching subjects:', error);\n    }\n    setSelectedexams(selectedExamId);\n  };\n  const handleSubjectChange = (event, subjectId) => {\n    const {\n      checked\n    } = event.target;\n    // Fetch the subject details from subjectsData using subjectId\n    const subject = subjectsData.find(subj => subj.subjectId === subjectId);\n    if (subject) {\n      // If checked, add the subject to the selectedSubjects array\n      // If unchecked, remove the subject from the selectedSubjects array\n      setSelectedSubjects(prevSelectedSubjects => {\n        if (checked) {\n          return [...prevSelectedSubjects, subjectId];\n        } else {\n          return prevSelectedSubjects.filter(id => id !== subjectId);\n        }\n      });\n    }\n  };\n  const handleQuestionChange = (event, questionTypeId) => {\n    const {\n      checked\n    } = event.target;\n    setSelectedtypeofQuestion(prevSelectedQuestions => {\n      if (checked) {\n        return [...prevSelectedQuestions, questionTypeId];\n      } else {\n        return prevSelectedQuestions.filter(id => id !== questionTypeId);\n      }\n    });\n  };\n  useEffect(() => {\n    const fetchTypeOfQuestion = async () => {\n      try {\n        const response = await fetch('http://localhost:3081/type_of_questions');\n        const result = await response.json();\n        console.log('Type of Questions Data:', result); // Add this line to log the data\n        setTypeofQuestion(result);\n      } catch (error) {\n        console.error('Error fetching Type of questions:', error);\n      }\n    };\n    fetchTypeOfQuestion();\n  }, []);\n  const handleStartDateChange = e => {\n    const formattedDate = e.target.value;\n    setStartDate(formattedDate);\n  };\n  const handleEndDateChange = e => {\n    const formattedDate = e.target.value;\n    setEndDate(formattedDate);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let selectedTypeOfTest;\n    if (name === 'cost' || name === 'discount') {\n      const cost = name === 'cost' ? parseFloat(value) : formData.cost;\n      const discount = name === 'discount' ? parseFloat(value) : formData.discount;\n      const discountAmount = !isNaN(cost) && !isNaN(discount) ? cost * discount / 100 : '';\n      const totalPrice = !isNaN(cost) && !isNaN(discountAmount) ? cost - discountAmount : '';\n      setFormData({\n        ...formData,\n        typeOfTest: selectedTypeOfTest || '',\n        examId: selectedexams,\n        subjects: selectedSubjects,\n        typeofQuestion: selectedtypeofQuestion,\n        courseStartDate: startDate,\n        courseEndDate: endDate,\n        cost: cost,\n        discount: discount,\n        discountAmount: discountAmount,\n        totalPrice: totalPrice\n      });\n    } else if (name === 'courseStartDate' || name === 'courseEndDate') {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prepare the data for submission\n    const data = {\n      ...formData,\n      typeOfTest,\n      examId: selectedexams,\n      subjects: selectedSubjects,\n      typeofQuestion: selectedtypeofQuestion // Assuming selectedtypeofQuestion is an array\n    };\n\n    // Submit the data to the server\n    try {\n      const response = await fetch('http://localhost:3081/course-creation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n\n      // Check if the result contains the expected structure\n      if (result && result.courseCreationId) {\n        const courseCreationId = result.courseCreationId;\n\n        // Use the courseCreationId in the second fetch to add subjects\n        const subjectsResponse = await fetch('http://localhost:3081/course_type_of_question', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            courseCreationId,\n            subjectIds: selectedSubjects,\n            quesionTypeIds: selectedtypeofQuestion\n          })\n        });\n        const subjectsResult = await subjectsResponse.json();\n        console.log('Subjects Result:', subjectsResult);\n        console.log(result);\n\n        // Handle success or show a success message to the user\n        // Adjust the condition based on the actual structure of the response\n        if (result.success) {\n          console.log('Course created successfully');\n        } else {\n          console.log('Failed to create course:', result.error);\n        }\n      } else {\n        console.log('Failed to create course. Unexpected response:', result);\n      }\n    } catch (error) {\n      console.error('Error submitting course data:', error);\n      // Handle error or show an error message to the user\n    }\n  };\n\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleFormVisibility,\n      children: isFormOpen ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-circle-xmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this) : 'Add Course'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), isFormOpen && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"courseName\",\n          children: \"Course Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"courseName\",\n          name: \"courseName\",\n          value: formData.courseName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type of test:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.typeOfTestId,\n            name: \"typeOfTestId\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select type of test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), typeOfTest.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type.typeOfTestId,\n              children: type.typeOfTestName\n            }, type.typeOfTestId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Select Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exams\",\n            children: \"Select Exam:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"exams\",\n            value: selectedexams,\n            onChange: handleexams,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select exams\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), exams.map(exams => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: exams.examId,\n              children: exams.examName\n            }, exams.examId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Subjects:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), subjectsData.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `subject-${subject.subjectId}`,\n              name: `subject-${subject.subjectId}`,\n              value: subject.subjectId,\n              checked: selectedSubjects.includes(subject.subjectId),\n              onChange: e => handleSubjectChange(e, subject.subjectId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `subject-${subject.subjectId}`,\n              children: subject.subjectName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this)]\n          }, subject.subjectId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"type of Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: typeofQuestion.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `question-${type.quesionTypeId}`,\n              name: `question-${type.quesionTypeId}`,\n              value: type.quesionTypeId,\n              checked: selectedtypeofQuestion.includes(type.quesionTypeId),\n              onChange: e => handleQuestionChange(e, type.quesionTypeId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `question-${type.quesionTypeId}`,\n              children: type.typeofQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this)]\n          }, type.quesionTypeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Course Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"courseStartDate\",\n            children: \"Course Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"courseStartDate\",\n            name: \"courseStartDate\",\n            value: startDate,\n            onChange: handleStartDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"courseEndDate\",\n            children: \"Course End Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"courseEndDate\",\n            name: \"courseEndDate\",\n            value: endDate,\n            onChange: handleEndDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Cost and Discounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cost\",\n            children: \"Cost:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cost\",\n            name: \"cost\",\n            value: formData.cost,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"discount\",\n            children: \"Discount (%):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"discount\",\n            name: \"discount\",\n            value: formData.discount,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"discountAmount\",\n            children: \"Discount Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"discountAmount\",\n            name: \"discountAmount\",\n            value: formData.discountAmount,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"totalPrice\",\n            children: \"Total Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"totalPrice\",\n            name: \"totalPrice\",\n            value: formData.totalPrice,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Create_exam_page\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Course ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Course Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Type of Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \" Exam\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Subjects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Type of Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Course Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Course End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Discount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Total Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: courseData.map(course => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.courseCreationId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.courseName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.typeOfTestName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.examName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Array.isArray(course.subjects) && course.subjects.length > 0 ? course.subjects.join(', ') : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Array.isArray(course.typeofQuestion) && course.typeofQuestion.length > 0 ? course.typeofQuestion.join(', ') : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(course.courseStartDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(course.courseEndDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.cost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.Discount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa-solid fa-pencil\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 16\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(exam.examId),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa-regular fa-trash-can\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this)]\n          }, course.courseCreationId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s(Coursecreation, \"bmwHSqNjdbXuqyC9qOvGGAZn190=\");\n_c = Coursecreation;\nexport default Coursecreation;\nvar _c;\n$RefreshReg$(_c, \"Coursecreation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Coursecreation","_s","typeOfTest","setTypeOfTest","exams","setExams","selectedexams","setSelectedexams","selectedSubjects","setSelectedSubjects","typeofQuestion","setTypeofQuestion","selectedtypeofQuestion","setSelectedtypeofQuestion","startDate","setStartDate","endDate","setEndDate","subjectsData","setSubjectsData","isFormOpen","setIsFormOpen","courseData","setCourseData","toggleFormVisibility","formData","setFormData","courseName","examId","typeOfTestId","questiontypes","courseStartDate","courseEndDate","cost","discount","discountAmount","totalPrice","fetchSelectedExam","response","fetch","data","json","console","log","error","fetchCourseData","result","coursesWithArrays","map","course","subjects","split","question_types","fetchTypeOfTest","then","catch","handleexams","event","selectedExamId","target","value","handleSubjectChange","subjectId","checked","subject","find","subj","prevSelectedSubjects","filter","id","handleQuestionChange","questionTypeId","prevSelectedQuestions","fetchTypeOfQuestion","handleStartDateChange","e","formattedDate","handleEndDateChange","handleChange","name","selectedTypeOfTest","parseFloat","isNaN","handleSubmit","preventDefault","method","headers","body","JSON","stringify","courseCreationId","subjectsResponse","subjectIds","quesionTypeIds","subjectsResult","success","formatDate","dateString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","typeOfTestName","examName","includes","subjectName","quesionTypeId","readOnly","scope","Array","isArray","length","join","Discount","class","handleDelete","exam","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/new admin project/client/src/components/Coursecreation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './admin.css'\r\nconst Coursecreation = () => {\r\n  const [typeOfTest, setTypeOfTest] = useState([]);\r\n  const [exams, setExams] = useState([]);\r\n  const [selectedexams, setSelectedexams] = useState('');\r\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n  const [typeofQuestion, setTypeofQuestion] = useState([]);\r\n  const [selectedtypeofQuestion, setSelectedtypeofQuestion] = useState([]);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [subjectsData, setSubjectsData] = useState([]);\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [courseData, setCourseData] = useState([]);\r\n\r\n  const toggleFormVisibility = () => {\r\n    setIsFormOpen(!isFormOpen);\r\n  };\r\n\r\n  const [formData, setFormData] = useState({\r\n    courseName: '',\r\n    examId: '',\r\n    typeOfTestId: '',\r\n    questiontypes: '',\r\n    courseStartDate: '',\r\n    courseEndDate: '',\r\n    cost: '',\r\n    discount: '',\r\n    discountAmount: '',\r\n    totalPrice: '',\r\n\r\n  });\r\n  useEffect(() => {\r\n    const fetchSelectedExam = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3081/courese-exams/${selectedexams}`);\r\n        const data = await response.json();\r\n        console.log('Fetched Selected Exam:', data);\r\n        // Now 'data' contains the selected exam details, including examName\r\n      } catch (error) {\r\n        console.error('Error fetching selected exam:', error);\r\n      }\r\n    };\r\n  \r\n    // Call the function when selectedexams changes\r\n    fetchSelectedExam();\r\n  }, [selectedexams]);\r\n\r\n  useEffect(() => {\r\n    const fetchCourseData = async () => {\r\n      try {\r\n        console.log('Before fetching course data. Selected Exam ID:', selectedexams);\r\n        const response = await fetch('http://localhost:3081/course_creation_table');\r\n        const result = await response.json();\r\n    \r\n        // Ensure that subjects and typeofQuestion are arrays\r\n        const coursesWithArrays = result.map((course) => ({\r\n          ...course,\r\n          subjects: course.subjects ? course.subjects.split(', ') : [],\r\n          typeofQuestion: course.question_types ? course.question_types.split(', ') : [], \r\n        }));\r\n    \r\n        console.log('Fetched Course Data:', coursesWithArrays);\r\n        setCourseData(coursesWithArrays);\r\n      } catch (error) {\r\n        console.error('Error fetching course data:', error);\r\n      }\r\n    };\r\n    \r\n    fetchCourseData();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchTypeOfTest = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3081/type_of_tests');\r\n        const result = await response.json();\r\n        setTypeOfTest(result);\r\n      } catch (error) {\r\n        console.error('Error fetching Type of questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchTypeOfTest();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3081/courese-exams')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setExams(data);\r\n      })\r\n      .catch(error => console.error('Error fetching exams:', error));\r\n  }, []);\r\n\r\n\r\nconst handleexams = async (event) => {\r\n  const selectedExamId = event.target.value;\r\n  console.log('Selected Exam ID:', selectedExamId);\r\n  setSelectedexams(selectedExamId);\r\n  console.log('Selected Exam ID (after setting):', selectedexams);\r\n  try {\r\n    const response = await fetch(`http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`);\r\n    const data = await response.json();\r\n    console.log('Subjects Data:', data); // Log the fetched data\r\n    setSubjectsData(data);  // Update subjectsData state\r\n    setSelectedSubjects([]); // Reset selected subjects\r\n  } catch (error) {\r\n    console.error('Error fetching subjects:', error);\r\n  }\r\n\r\n  setSelectedexams(selectedExamId);\r\n};\r\n\r\n\r\n\r\n  const handleSubjectChange = (event, subjectId) => {\r\n    const { checked } = event.target;\r\n    // Fetch the subject details from subjectsData using subjectId\r\n    const subject = subjectsData.find((subj) => subj.subjectId === subjectId);\r\n\r\n    if (subject) {\r\n      // If checked, add the subject to the selectedSubjects array\r\n      // If unchecked, remove the subject from the selectedSubjects array\r\n      setSelectedSubjects((prevSelectedSubjects) => {\r\n        if (checked) {\r\n          return [...prevSelectedSubjects, subjectId];\r\n        } else {\r\n          return prevSelectedSubjects.filter((id) => id !== subjectId);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const handleQuestionChange = (event, questionTypeId) => {\r\n    const { checked } = event.target;\r\n\r\n    setSelectedtypeofQuestion((prevSelectedQuestions) => {\r\n      if (checked) {\r\n        return [...prevSelectedQuestions, questionTypeId];\r\n      } else {\r\n        return prevSelectedQuestions.filter((id) => id !== questionTypeId);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTypeOfQuestion = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3081/type_of_questions');\r\n        const result = await response.json();\r\n        console.log('Type of Questions Data:', result); // Add this line to log the data\r\n        setTypeofQuestion(result);\r\n      } catch (error) {\r\n        console.error('Error fetching Type of questions:', error);\r\n      }\r\n    };\r\n  \r\n    fetchTypeOfQuestion();\r\n  }, []);\r\n\r\n\r\n  const handleStartDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setStartDate(formattedDate);\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setEndDate(formattedDate);\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let selectedTypeOfTest; \r\n    if (name === 'cost' || name === 'discount') {\r\n      const cost = name === 'cost' ? parseFloat(value) : formData.cost;\r\n      const discount = name === 'discount' ? parseFloat(value) : formData.discount;\r\n      const discountAmount = (!isNaN(cost) && !isNaN(discount)) ? (cost * discount) / 100 : '';\r\n      const totalPrice = (!isNaN(cost) && !isNaN(discountAmount)) ? cost - discountAmount : '';\r\n      setFormData({\r\n        ...formData,\r\n        typeOfTest: selectedTypeOfTest || '',\r\n        examId: selectedexams,\r\n        subjects: selectedSubjects,\r\n        typeofQuestion: selectedtypeofQuestion,\r\n        courseStartDate: startDate,\r\n        courseEndDate: endDate,\r\n        cost: cost,\r\n        discount: discount,\r\n        discountAmount: discountAmount,\r\n        totalPrice: totalPrice,\r\n\r\n      });\r\n    } else if (name === 'courseStartDate' || name === 'courseEndDate') {\r\n      setFormData({ ...formData, [name]: value });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Prepare the data for submission\r\n    const data = {\r\n      ...formData,\r\n      typeOfTest,\r\n      examId: selectedexams,\r\n      subjects: selectedSubjects,\r\n      typeofQuestion: selectedtypeofQuestion, // Assuming selectedtypeofQuestion is an array\r\n    };\r\n\r\n    // Submit the data to the server\r\n    try {\r\n      const response = await fetch('http://localhost:3081/course-creation', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      // Check if the result contains the expected structure\r\n      if (result && result.courseCreationId) {\r\n        const courseCreationId = result.courseCreationId;\r\n\r\n        // Use the courseCreationId in the second fetch to add subjects\r\n        const subjectsResponse = await fetch('http://localhost:3081/course_type_of_question', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            courseCreationId,\r\n            subjectIds: selectedSubjects,\r\n            quesionTypeIds: selectedtypeofQuestion,\r\n          }),\r\n        });\r\n\r\n        const subjectsResult = await subjectsResponse.json();\r\n        console.log('Subjects Result:', subjectsResult);\r\n        console.log(result);\r\n\r\n        // Handle success or show a success message to the user\r\n        // Adjust the condition based on the actual structure of the response\r\n        if (result.success) {\r\n          console.log('Course created successfully');\r\n        } else {\r\n          console.log('Failed to create course:', result.error);\r\n        }\r\n      } else {\r\n        console.log('Failed to create course. Unexpected response:', result);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting course data:', error);\r\n      // Handle error or show an error message to the user\r\n    }\r\n  };\r\n\r\n  \r\n  function formatDate(dateString) {\r\n    const date = new Date(dateString);\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); \r\n    const year = date.getFullYear();\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <button onClick={toggleFormVisibility}>\r\n        {isFormOpen ? (\r\n          <i className=\"far fa-circle-xmark\"></i>\r\n        ) : (\r\n          'Add Course'\r\n        )}\r\n      </button>\r\n\r\n      {isFormOpen && (\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"courseName\">Course Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"courseName\"\r\n              name=\"courseName\"\r\n              value={formData.courseName}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <br />\r\n          <fieldset>\r\n            <label>\r\n              Type of test:\r\n            </label>\r\n            <div>\r\n              <select\r\n                value={formData.typeOfTestId}\r\n                name=\"typeOfTestId\"\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\">Select type of test</option>\r\n                {typeOfTest.map((type) => (\r\n                  <option key={type.typeOfTestId} value={type.typeOfTestId}>\r\n                    {type.typeOfTestName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </fieldset>\r\n          <br />\r\n          <fieldset>\r\n            <legend>Select Exam</legend>\r\n            <div>\r\n              <label htmlFor=\"exams\">Select Exam:</label>\r\n              <select id=\"exams\" value={selectedexams} onChange={handleexams}>\r\n                <option value=\"\">Select exams</option>\r\n                {exams.map(exams => (\r\n                  <option key={exams.examId} value={exams.examId}>\r\n                    {exams.examName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <br />\r\n            <div>\r\n              <label>Select Subjects:</label>\r\n              {subjectsData.map((subject) => (\r\n                <div key={subject.subjectId}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`subject-${subject.subjectId}`}\r\n                    name={`subject-${subject.subjectId}`}\r\n                    value={subject.subjectId}\r\n                    checked={selectedSubjects.includes(subject.subjectId)}\r\n                    onChange={(e) => handleSubjectChange(e, subject.subjectId)}\r\n                  />\r\n                  <label htmlFor={`subject-${subject.subjectId}`}>{subject.subjectName}</label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </fieldset>\r\n          <br />\r\n          <fieldset>\r\n            <label>\r\n              type of Questions:\r\n            </label>\r\n            <div>\r\n              {typeofQuestion.map((type) => (\r\n                <div key={type.quesionTypeId}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`question-${type.quesionTypeId}`}\r\n                    name={`question-${type.quesionTypeId}`}\r\n                    value={type.quesionTypeId}\r\n                    checked={selectedtypeofQuestion.includes(type.quesionTypeId)}\r\n                    onChange={(e) => handleQuestionChange(e, type.quesionTypeId)}\r\n                  />\r\n                  <label htmlFor={`question-${type.quesionTypeId}`}>{type.typeofQuestion}</label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </fieldset>\r\n          <br />\r\n          <fieldset>\r\n            <legend>Course Duration</legend>\r\n            <div>\r\n              <label htmlFor=\"courseStartDate\">Course Start Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"courseStartDate\"\r\n                name=\"courseStartDate\"\r\n                value={startDate}\r\n                onChange={handleStartDateChange}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"courseEndDate\">Course End Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"courseEndDate\"\r\n                name=\"courseEndDate\"\r\n                value={endDate}\r\n                onChange={handleEndDateChange}\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <br />\r\n          <fieldset>\r\n            <legend>Cost and Discounts</legend>\r\n            <div>\r\n              <label htmlFor=\"cost\">Cost:</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"cost\"\r\n                name=\"cost\"\r\n                value={formData.cost}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"discount\">Discount (%):</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"discount\"\r\n                name=\"discount\"\r\n                value={formData.discount}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"discountAmount\">Discount Amount:</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"discountAmount\"\r\n                name=\"discountAmount\"\r\n                value={formData.discountAmount}\r\n                readOnly\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"totalPrice\">Total Price:</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"totalPrice\"\r\n                name=\"totalPrice\"\r\n                value={formData.totalPrice}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <button type=\"submit\">Create Course</button>\r\n        </form>\r\n      )}\r\n<div className='Create_exam_page'>\r\n<table>\r\n\r\n  <thead>\r\n  <tr>\r\n            <th scope='col'>Course ID</th>\r\n            <th scope='col'>Course Name</th>\r\n            <th scope='col'>Type of Test</th>\r\n            <th scope='col'> Exam</th>\r\n            <th scope='col'>Subjects</th> \r\n            <th scope='col'>Type of Questions</th>\r\n            <th scope='col'>Course Start Date</th>\r\n            <th scope='col'>Course End Date</th>\r\n            <th scope='col'>Cost</th>\r\n            <th scope='col'>Discount</th>\r\n            <th scope='col'>Total Price</th>\r\n            <th scope='col'>Action</th>\r\n          </tr>\r\n          </thead> \r\n <tbody>\r\n\r\n{courseData.map((course) => (\r\n            <tr key={course.courseCreationId}>\r\n              <td>{course.courseCreationId}</td>\r\n              <td>{course.courseName}</td>\r\n              <td>{course.typeOfTestName}</td>\r\n              <td>{course.examName}</td>\r\n              <td>{Array.isArray(course.subjects) && course.subjects.length > 0 ? course.subjects.join(', ') : 'N/A'}</td>\r\n              <td>{Array.isArray(course.typeofQuestion) && course.typeofQuestion.length > 0 ? course.typeofQuestion.join(', ') : 'N/A'}</td>\r\n              <td>{formatDate(course.courseStartDate)}</td>\r\n              <td>{formatDate(course.courseEndDate)}</td>\r\n              <td>{course.cost}</td>\r\n              <td>{course.Discount}</td>\r\n              <td>{course.totalPrice}</td>\r\n              <td><button>\r\n               <i class=\"fa-solid fa-pencil\"></i>\r\n                </button>\r\n                <button onClick={() => handleDelete(exam.examId)}><i class=\"fa-regular fa-trash-can\"></i></button></td>\r\n            </tr>\r\n          ))}\r\n        </tbody> \r\n </table></div>\r\n    </div>\r\n  )}\r\n\r\nexport default Coursecreation"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}