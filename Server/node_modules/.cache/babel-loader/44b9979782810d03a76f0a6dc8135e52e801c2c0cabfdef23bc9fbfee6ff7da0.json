{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new admin project\\\\client\\\\src\\\\components\\\\Examcreation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './admin.css';\nimport SuccessPopup from './SuccessPopup';\nimport { Link } from 'react-router-dom';\n// import EditForm from './EditForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Examcreation() {\n  _s();\n  const [examName, setExamName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [submitting, setSubmitting] = useState(false);\n  const [formOpen, setFormOpen] = useState(false);\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\n  const [examsWithSubjects, setExamsWithSubjects] = useState([]);\n  // const [isEditing, setIsEditing] = useState(false);\n  // const [editedExam, setEditedExam] = useState({});\n  // const [editedData, setEditedData] = useState({});\n  // const [editedSubjects, setEditedSubjects] = useState([]);\n  // const [isEditingSubjects, setIsEditingSubjects] = useState(false);\n  // const [selectedExam, setSelectedExam] = useState(null);\n  // const [showEditForm, setShowEditForm] = useState(false);\n  // const [selectedExam, setSelectedExam] = useState(null);\n  const resetForm = () => {\n    setExamName('');\n    setStartDate('');\n    setEndDate('');\n    setSelectedSubjects([]);\n  };\n\n  //....................................FORMATING dTATE...............................//\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is 0-based\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  }\n  //....................................END...............................//\n\n  //....................................FECHING SUBJECTS ...............................//\n  useEffect(() => {\n    // Fetch subjects from the backend when the component mounts\n    axios.get('http://localhost:3081/subjects').then(response => {\n      setSubjects(response.data);\n    }).catch(error => {\n      console.error('Error fetching subjects:', error);\n    });\n  }, []);\n  //....................................END...............................//\n\n  //....................................HANDLER FOR SUBJECT CHECK BOXS...............................//\n  const handleCheckboxChange = subjectId => {\n    // Toggle the selection of subjects\n    setSelectedSubjects(prevSelected => {\n      if (prevSelected.includes(subjectId)) {\n        return prevSelected.filter(id => id !== subjectId);\n      } else {\n        return [...prevSelected, subjectId];\n      }\n    });\n  };\n  //....................................END...............................//\n\n  //................................... handler for submit button .............................//\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitting(true);\n    const examData = {\n      examName,\n      startDate,\n      endDate,\n      selectedSubjects\n    };\n    axios.post('http://localhost:3081/exams', examData).then(response => {\n      console.log('Exam created:', response.data);\n      // Reset form fields and state as needed\n      setSubmitting(false);\n      resetForm();\n      window.location.reload();\n      setShowSuccessPopup(true);\n    }).catch(error => {\n      console.error('Error creating exam:', error);\n      setSubmitting(false);\n    });\n  };\n  const closeSuccessPopup = () => {\n    setShowSuccessPopup(false);\n  };\n  useEffect(() => {\n    axios.get('http://localhost:3081/exams-with-subjects').then(response => {\n      setExamsWithSubjects(response.data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  //....................................END...............................//\n\n  //.............................Delete button handler ...................//\n  const handleDelete = examId => {\n    // Handle the \"Delete\" action for the given examId on the client side\n    const confirmDelete = window.confirm('Are you sure you want to delete this data?');\n    if (confirmDelete) {\n      setExamsWithSubjects(prevExams => prevExams.filter(exam => exam.examId !== examId));\n\n      // Send a request to delete the exam from the server\n      axios.delete(`http://localhost:3081/exams/${examId}`).then(response => {\n        console.log(`Exam with ID ${examId} deleted from the database`);\n      }).catch(error => {\n        console.error('Error deleting exam:', error);\n      });\n    }\n  };\n  //....................................END...............................//\n\n  //....................................HANDLER FOR EDIT BUTTON...............................//\n\n  //....................................END...............................//\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_exam_container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_exam_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create_exam_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), formOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Create_Exam_from\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"formdiv_contaniner\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Exam Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: examName,\n                  onChange: e => setExamName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: startDate,\n                  onChange: e => setStartDate(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: endDate,\n                  onChange: e => setEndDate(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Subjects:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"subject-list\",\n                children: subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: selectedSubjects.includes(subject.subjectId),\n                      onChange: () => handleCheckboxChange(subject.subjectId)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 21\n                    }, this), subject.subjectName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 19\n                  }, this)\n                }, subject.subjectId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: submitting,\n                children: \"Create Exam\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 3\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)\n\n        // ....................................FROM END............................... \n        : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFormOpen(true),\n          children: \"+Add Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this), showSuccessPopup && /*#__PURE__*/_jsxDEV(SuccessPopup, {\n          onClose: closeSuccessPopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Create_exam_page\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Exams with Subjects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Serial no\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Exam Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"End Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Subjects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: examsWithSubjects.map(exam => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: exam.examId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: exam.examName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(exam.startDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(exam.endDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: exam.subjects\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/update/${exam.examId}`,\n                  children: \"update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDelete(exam.examId),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 15\n              }, this)]\n            }, exam.examId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(Examcreation, \"6s+HGdpiVHk/JoWS77XJzk3jjiQ=\");\n_c = Examcreation;\nexport default Examcreation;\nvar _c;\n$RefreshReg$(_c, \"Examcreation\");","map":{"version":3,"names":["React","useState","useEffect","axios","SuccessPopup","Link","jsxDEV","_jsxDEV","Examcreation","_s","examName","setExamName","startDate","setStartDate","endDate","setEndDate","selectedSubjects","setSelectedSubjects","subjects","setSubjects","submitting","setSubmitting","formOpen","setFormOpen","showSuccessPopup","setShowSuccessPopup","examsWithSubjects","setExamsWithSubjects","resetForm","formatDate","dateString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","get","then","response","data","catch","error","console","handleCheckboxChange","subjectId","prevSelected","includes","filter","id","handleSubmit","e","preventDefault","examData","post","log","window","location","reload","closeSuccessPopup","handleDelete","examId","confirmDelete","confirm","prevExams","exam","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","map","subject","checked","subjectName","disabled","onClick","onClose","to","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/new admin project/client/src/components/Examcreation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './admin.css'\r\nimport SuccessPopup from './SuccessPopup';\r\nimport { Link } from 'react-router-dom';\r\n// import EditForm from './EditForm';\r\nfunction Examcreation() {\r\n    const [examName, setExamName] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [showSuccessPopup, setShowSuccessPopup] = useState(false);\r\n    const [examsWithSubjects, setExamsWithSubjects] = useState([]);\r\n    // const [isEditing, setIsEditing] = useState(false);\r\n    // const [editedExam, setEditedExam] = useState({});\r\n    // const [editedData, setEditedData] = useState({});\r\n    // const [editedSubjects, setEditedSubjects] = useState([]);\r\n    // const [isEditingSubjects, setIsEditingSubjects] = useState(false);\r\n    // const [selectedExam, setSelectedExam] = useState(null);\r\n    // const [showEditForm, setShowEditForm] = useState(false);\r\n    // const [selectedExam, setSelectedExam] = useState(null);\r\n    const resetForm = () => {\r\n        setExamName('');\r\n        setStartDate('');\r\n        setEndDate('');\r\n        setSelectedSubjects([]);\r\n    };\r\n\r\n//....................................FORMATING dTATE...............................//\r\n    function formatDate(dateString) {\r\n        const date = new Date(dateString);\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n        const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is 0-based\r\n        const year = date.getFullYear();\r\n        return `${day}/${month}/${year}`;\r\n      }\r\n//....................................END...............................//\r\n\r\n//....................................FECHING SUBJECTS ...............................//\r\n    useEffect(() => {\r\n        // Fetch subjects from the backend when the component mounts\r\n        axios.get('http://localhost:3081/subjects')\r\n            .then(response => {\r\n                setSubjects(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching subjects:', error);\r\n            });\r\n    }, []);\r\n//....................................END...............................//\r\n\r\n//....................................HANDLER FOR SUBJECT CHECK BOXS...............................//\r\n    const handleCheckboxChange = (subjectId) => {\r\n        // Toggle the selection of subjects\r\n        setSelectedSubjects((prevSelected) => {\r\n            if (prevSelected.includes(subjectId)) {\r\n                return prevSelected.filter((id) => id !== subjectId);\r\n            } else {\r\n                return [...prevSelected, subjectId];\r\n            }\r\n        });\r\n    };\r\n//....................................END...............................//\r\n\r\n//................................... handler for submit button .............................//\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSubmitting(true);\r\n\r\n        const examData = {\r\n            examName,\r\n            startDate,\r\n            endDate,\r\n            selectedSubjects,\r\n        };\r\n\r\n        axios.post('http://localhost:3081/exams', examData)\r\n            .then(response => {\r\n                console.log('Exam created:', response.data);\r\n                // Reset form fields and state as needed\r\n                setSubmitting(false);\r\n                resetForm();\r\n                window.location.reload();\r\n                setShowSuccessPopup(true);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error creating exam:', error);\r\n                setSubmitting(false);\r\n            });\r\n    };\r\n    const closeSuccessPopup = () => {\r\n        setShowSuccessPopup(false);\r\n    };\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3081/exams-with-subjects')\r\n            .then(response => {\r\n                setExamsWithSubjects(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    }, []);\r\n//....................................END...............................//\r\n\r\n//.............................Delete button handler ...................//\r\n    const handleDelete = (examId) => {\r\n        // Handle the \"Delete\" action for the given examId on the client side\r\n        const confirmDelete = window.confirm('Are you sure you want to delete this data?');\r\n        if (confirmDelete) {\r\n            setExamsWithSubjects(prevExams => prevExams.filter(exam => exam.examId !== examId));\r\n\r\n            // Send a request to delete the exam from the server\r\n            axios.delete(`http://localhost:3081/exams/${examId}`)\r\n                .then(response => {\r\n                    console.log(`Exam with ID ${examId} deleted from the database`);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error deleting exam:', error);\r\n                });\r\n        }\r\n    };\r\n//....................................END...............................//\r\n    \r\n//....................................HANDLER FOR EDIT BUTTON...............................//\r\n\r\n\r\n\r\n\r\n\r\n//....................................END...............................//\r\n\r\n\r\n  return (\r\n\r\n    <div className='create_exam_container'>\r\n         <div className='create_exam_content'>\r\n            <div className='create_exam_header'>\r\n            <h2>Create Exam</h2>\r\n            {formOpen ? (\r\n                <div className='Create_Exam_from'>\r\n                     <form onSubmit={handleSubmit}>\r\n            \r\n            <div className='formdiv_contaniner'>\r\n            <label>\r\n              Exam Name:\r\n              <input type=\"text\" value={examName} onChange={(e) => setExamName(e.target.value)} />\r\n            </label>\r\n            </div>\r\n            <div >\r\n            <label>\r\n              Start Date:\r\n              <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n            </label>\r\n             </div>\r\n            \r\n  \r\n           <div>\r\n           <label>\r\n              End Date:\r\n              <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n            </label>\r\n           </div>\r\n  \r\n           \r\n  \r\n          <div>\r\n          <label>Subjects:</label>\r\n            <ul className=\"subject-list\">\r\n              {subjects.map(subject => (\r\n                <li key={subject.subjectId}>\r\n                  <label>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedSubjects.includes(subject.subjectId)}\r\n                      onChange={() => handleCheckboxChange(subject.subjectId)}\r\n                    />\r\n                    {subject.subjectName}\r\n                  </label>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n  \r\n  <div>\r\n  <button type=\"submit\" disabled={submitting}>Create Exam</button>\r\n  </div>\r\n          \r\n            \r\n          </form>\r\n                </div>\r\n       \r\n// ....................................FROM END............................... \r\n      ) : (\r\n        <button onClick={() => setFormOpen(true)}>+Add Exam</button>\r\n      )}\r\n      {showSuccessPopup && <SuccessPopup onClose={closeSuccessPopup} />}\r\n            </div>\r\n      {/* ....................................FORM START............................... */}\r\n     \r\n\r\n      <div className='Create_exam_page'>\r\n        <h2>Exams with Subjects</h2>\r\n{/* ....................................TABLE START...............................  */}\r\n        <table className=''>\r\n          <thead>\r\n            <tr>\r\n              <th>Serial no</th>\r\n              <th>Exam Name</th>\r\n              <th>Start Date</th>\r\n              <th>End Date</th>\r\n              <th>Subjects</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {examsWithSubjects.map(exam => (\r\n            <tr key={exam.examId}>\r\n              <td>{exam.examId}</td>\r\n              <td>{exam.examName}</td>\r\n              <td>{formatDate(exam.startDate)}</td>\r\n              <td>{formatDate(exam.endDate)}</td>\r\n              <td>{exam.subjects}</td>\r\n              <td>\r\n                <Link to={`/update/${exam.examId}`} >update</Link>\r\n                <button onClick={() => handleDelete(exam.examId)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n        </table>\r\n{/* ....................................TABLE END...............................  */}\r\n      </div>\r\n    </div>\r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default Examcreation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}