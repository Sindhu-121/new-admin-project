{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new admin project\\\\client\\\\src\\\\components\\\\Coureseupdate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Coureseupdate = () => {\n  _s();\n  const [typeOfTest, setTypeOfTest] = useState([]);\n  const [exams, setExams] = useState([]);\n  useEffect(() => {\n    const fetchTypeOfTest = async () => {\n      try {\n        const response = await fetch('http://localhost:3081/type_of_tests');\n        const result = await response.json();\n        setTypeOfTest(result);\n      } catch (error) {\n        console.error('Error fetching Type of questions:', error);\n      }\n    };\n    fetchTypeOfTest();\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3081/courese-exams').then(response => response.json()).then(data => {\n      setExams(data);\n    }).catch(error => console.error('Error fetching exams:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Course Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type of test:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          // value={formData.typeOfTestId}\n          name: \"typeOfTestId\"\n          // onChange={handleChange}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select type of test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), typeOfTest.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type.typeOfTestId,\n            children: type.typeOfTestName\n          }, type.typeOfTestId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Select Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exams\",\n            children: \"Select Exam:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"exams\",\n            value: selectedexams,\n            onChange: handleexams,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select exams\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), exams.map(exams => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: exams.examId,\n              children: exams.examName\n            }, exams.examId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Coureseupdate, \"qltYA4zsobag1XQKFJgPpBfrXL8=\");\n_c = Coureseupdate;\nexport default Coureseupdate;\nvar _c;\n$RefreshReg$(_c, \"Coureseupdate\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Coureseupdate","_s","typeOfTest","setTypeOfTest","exams","setExams","fetchTypeOfTest","response","fetch","result","json","error","console","then","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","map","typeOfTestId","typeOfTestName","htmlFor","id","selectedexams","onChange","handleexams","examId","examName","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/new admin project/client/src/components/Coureseupdate.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst Coureseupdate = () => {\r\n    const [typeOfTest, setTypeOfTest] = useState([]);\r\n    const [exams, setExams] = useState([]);\r\n    useEffect(() => {\r\n        const fetchTypeOfTest = async () => {\r\n          try {\r\n            const response = await fetch('http://localhost:3081/type_of_tests');\r\n            const result = await response.json();\r\n            setTypeOfTest(result);\r\n          } catch (error) {\r\n            console.error('Error fetching Type of questions:', error);\r\n          }\r\n        };\r\n    \r\n        fetchTypeOfTest();\r\n      }, []);\r\n      useEffect(() => {\r\n        fetch('http://localhost:3081/courese-exams')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            setExams(data);\r\n          })\r\n          .catch(error => console.error('Error fetching exams:', error));\r\n      }, []);\r\n  return (\r\n    <div>\r\n          <form>\r\n            <div>\r\n                <label>Course Name:</label>\r\n                <input type=\"text\" />\r\n            </div>\r\n            <div>\r\n            <label>\r\n              Type of test:\r\n            </label>\r\n            <select\r\n                // value={formData.typeOfTestId}\r\n                name=\"typeOfTestId\"\r\n                // onChange={handleChange}\r\n              >\r\n                <option value=\"\">Select type of test</option>\r\n                {typeOfTest.map((type) => (\r\n                  <option key={type.typeOfTestId} value={type.typeOfTestId}>\r\n                    {type.typeOfTestName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n            <legend>Select Exam</legend>\r\n            <div>\r\n              <label htmlFor=\"exams\">Select Exam:</label>\r\n              <select id=\"exams\" value={selectedexams} onChange={handleexams}>\r\n                <option value=\"\">Select exams</option>\r\n                {exams.map(exams => (\r\n                  <option key={exams.examId} value={exams.examId}>\r\n                    {exams.examName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            </div>\r\n            </form>                          \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Coureseupdate"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}