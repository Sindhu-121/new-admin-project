{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new admin project\\\\client\\\\src\\\\components\\\\Coursecreation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Coursecreation() {\n  _s();\n  const [typeOfTests, setTypeOfTests] = useState([]);\n  const [selectedTypeOfTest, setSelectedTypeOfTest] = useState('');\n  const [exams, setExams] = useState([]);\n  const [selectedexams, setSelectedexams] = useState('');\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [questionTypes, setQuestionTypes] = useState([]);\n  const [selectedQuestionTypes, setSelectedQuestionTypes] = useState([]);\n  const [formData, setFormData] = useState({\n    courseName: '',\n    examId: '',\n    typeOfTestId: '',\n    questiontypes: '',\n    courseStartDate: '',\n    courseEndDate: '',\n    cost: '',\n    discount: '',\n    discountAmount: '',\n    totalPrice: ''\n  });\n  useEffect(() => {\n    fetch('http://localhost:3081/type-of-tests').then(response => response.json()).then(data => {\n      setTypeOfTests(data);\n    }).catch(error => console.error('Error fetching type of tests:', error));\n  }, []);\n  const handleTypeOfTestChange = event => {\n    setSelectedTypeOfTest(event.target.value);\n  };\n  useEffect(() => {\n    fetch('http://localhost:3081/question-types').then(response => response.json()).then(data => {\n      console.log('Question Types:', data); // Log the response\n      setQuestionTypes(data); // Update the state\n    }).catch(error => console.error('Error fetching question types:', error));\n  }, []);\n  const handleQuestionTypeChange = (event, questionTypeId) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      // Add the selected question type to the list\n      setSelectedQuestionTypes([...selectedQuestionTypes, questionTypeId]);\n    } else {\n      // Remove the deselected question type from the list\n      setSelectedQuestionTypes(selectedQuestionTypes.filter(id => id !== questionTypeId));\n    }\n  };\n  useEffect(() => {\n    fetch('http://localhost:3081/courese-exams').then(response => response.json()).then(data => {\n      setExams(data);\n    }).catch(error => console.error('Error fetching exams:', error));\n  }, []);\n  const handleexams = async event => {\n    const selectedExamId = event.target.value;\n\n    // Fetch subjects for the selected exam\n    try {\n      const response = await fetch(`http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`);\n      const subjectsData = await response.json();\n      setSelectedSubjects(subjectsData);\n    } catch (error) {\n      console.error('Error fetching subjects:', error);\n    }\n    setSelectedexams(selectedExamId);\n  };\n  const handleSubjectChange = (event, subjectId) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      // Add the selected subject to the list\n      setSelectedSubjects([...selectedSubjects, subjectId]);\n    } else {\n      // Remove the deselected subject from the list\n      setSelectedSubjects(selectedSubjects.filter(id => id !== subjectId));\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Directly parse cost and discount from their input values\n    if (name === 'cost' || name === 'discount') {\n      const cost = name === 'cost' ? parseFloat(value) : formData.cost;\n      const discount = name === 'discount' ? parseFloat(value) : formData.discount;\n\n      // Calculate discount amount\n      const discountAmount = !isNaN(cost) && !isNaN(discount) ? cost * discount / 100 : '';\n\n      // Calculate total price after discount\n      const totalPrice = !isNaN(cost) && !isNaN(discountAmount) ? cost - discountAmount : '';\n\n      // Update the form data including formatted dates\n      setFormData({\n        ...formData,\n        typeOfTestId: selectedTypeOfTest,\n        examId: selectedexams,\n        subjects: selectedSubjects,\n        questionTypes: selectedQuestionTypes,\n        courseStartDate: startDate,\n        courseEndDate: endDate,\n        cost: cost,\n        discount: discount,\n        discountAmount: discountAmount,\n        totalPrice: totalPrice\n      });\n    } else if (name === 'courseStartDate' || name === 'courseEndDate') {\n      // For date fields, update as usual\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    } else {\n      // For other fields, update as usual\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prepare the data for submission\n    const data = {\n      ...formData,\n      typeOfTestId: selectedTypeOfTest,\n      examId: selectedexams,\n      subjects: selectedSubjects,\n      questionTypes: selectedQuestionTypes\n    };\n\n    // Submit the data to the server\n    try {\n      const response = await fetch('http://localhost:3081/course-creation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n      console.log(result);\n      // Handle success or show a success message to the user\n    } catch (error) {\n      console.error('Error submitting course data:', error);\n      // Handle error or show an error message to the user\n    }\n  };\n\n  const handleStartDateChange = e => {\n    const formattedDate = e.target.value;\n    setStartDate(formattedDate);\n  };\n  const handleEndDateChange = e => {\n    const formattedDate = e.target.value;\n    setEndDate(formattedDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"courseName\",\n          children: \"Course Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"courseName\",\n          name: \"courseName\",\n          value: formData.courseName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"typeOfTest\",\n          children: \"Select Type of Test:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"typeOfTest\",\n          value: selectedTypeOfTest,\n          onChange: handleTypeOfTestChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Type of Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 9\n          }, this), typeOfTests.map(test => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: test.quesionTypeId,\n            children: test.typeofQuestion\n          }, test.quesionTypeId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exams\",\n          children: \"Select Exam:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"exams\",\n          value: selectedexams,\n          onChange: handleexams,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select exams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 9\n          }, this), exams.map(exams => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: exams.examId,\n            children: exams.examName\n          }, exams.examId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Subjects:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 3\n        }, this), selectedSubjects.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `subject-${subject.subjectId}`,\n            name: `subject-${subject.subjectId}`,\n            value: subject.subjectId,\n            checked: selectedSubjects.includes(subject.subjectId),\n            onChange: e => handleSubjectChange(e, subject.subjectId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `subject-${subject.subjectId}`,\n            children: subject.subjectName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 7\n          }, this)]\n        }, subject.subjectId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 5\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Question Types:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 3\n        }, this), questionTypes.map(questionType => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `questiontypes-${questionType.quesionTypeId}`,\n            name: `questiontypes-${questionType.quesionTypeId}`,\n            value: questionType.quesionTypeId,\n            checked: selectedQuestionTypes.includes(questionType.quesionTypeId),\n            onChange: e => handleQuestionTypeChange(e, questionType.quesionTypeId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `question-type-${questionType.quesionTypeId}`,\n            children: questionType.typeofQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 7\n          }, this)]\n        }, questionType.quesionTypeId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 5\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"courseStartDate\",\n          children: \"Start Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"courseStartDate\",\n          name: \"courseStartDate\",\n          value: startDate,\n          onChange: handleStartDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"courseEndDate\",\n          children: \"End Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"courseEndDate\",\n          name: \"courseEndDate\",\n          value: endDate,\n          onChange: handleEndDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cost\",\n          children: \"Cost:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"cost\",\n          name: \"cost\",\n          value: formData.cost,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"discount\",\n          children: \"Discount (%):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"discount\",\n          name: \"discount\",\n          value: formData.discount,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"discountAmount\",\n          children: \"Discount Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"discountAmount\",\n          name: \"discountAmount\",\n          value: formData.discountAmount,\n          readOnly: true // Make it read-only to prevent manual input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"totalPrice\",\n          children: \"Total Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"totalPrice\",\n          name: \"totalPrice\",\n          value: formData.totalPrice,\n          readOnly: true // Make it read-only to prevent manual input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(Coursecreation, \"MWvEAthVXCYpT11Iy+vzWAR34fI=\");\n_c = Coursecreation;\nexport default Coursecreation;\nvar _c;\n$RefreshReg$(_c, \"Coursecreation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Coursecreation","_s","typeOfTests","setTypeOfTests","selectedTypeOfTest","setSelectedTypeOfTest","exams","setExams","selectedexams","setSelectedexams","selectedSubjects","setSelectedSubjects","startDate","setStartDate","endDate","setEndDate","questionTypes","setQuestionTypes","selectedQuestionTypes","setSelectedQuestionTypes","formData","setFormData","courseName","examId","typeOfTestId","questiontypes","courseStartDate","courseEndDate","cost","discount","discountAmount","totalPrice","fetch","then","response","json","data","catch","error","console","handleTypeOfTestChange","event","target","value","log","handleQuestionTypeChange","questionTypeId","isChecked","checked","filter","id","handleexams","selectedExamId","subjectsData","handleSubjectChange","subjectId","handleChange","e","name","parseFloat","isNaN","subjects","handleSubmit","preventDefault","method","headers","body","JSON","stringify","result","handleStartDateChange","formattedDate","handleEndDateChange","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","map","test","quesionTypeId","typeofQuestion","examName","subject","includes","subjectName","questionType","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/new admin project/client/src/components/Coursecreation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction  Coursecreation() {\r\n\r\n  const [typeOfTests, setTypeOfTests] = useState([]);\r\n  const [selectedTypeOfTest, setSelectedTypeOfTest] = useState('');\r\n const [exams, setExams] = useState([]);\r\n const [selectedexams, setSelectedexams] = useState('');\r\n const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [questionTypes, setQuestionTypes] = useState([]);\r\n  const [selectedQuestionTypes, setSelectedQuestionTypes] = useState([]);\r\n  \r\n\r\n const [formData, setFormData] = useState({\r\n  courseName: '',\r\n  examId: '',\r\n  typeOfTestId: '',\r\n  questiontypes:'',\r\n  courseStartDate: '',\r\n  courseEndDate: '',\r\n  cost: '',\r\n  discount: '',\r\n  discountAmount: '',\r\n  totalPrice: '',\r\n  \r\n});\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3081/type-of-tests')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setTypeOfTests(data);\r\n      })\r\n      .catch(error => console.error('Error fetching type of tests:', error));\r\n  }, []); \r\n\r\n  const handleTypeOfTestChange = (event) => {\r\n    setSelectedTypeOfTest(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3081/question-types')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('Question Types:', data); // Log the response\r\n        setQuestionTypes(data); // Update the state\r\n      })\r\n      .catch(error => console.error('Error fetching question types:', error));\r\n  }, []);\r\n  \r\n  \r\n\r\n\r\n  const handleQuestionTypeChange = (event, questionTypeId) => {\r\n    const isChecked = event.target.checked;\r\n  \r\n    if (isChecked) {\r\n      // Add the selected question type to the list\r\n      setSelectedQuestionTypes([...selectedQuestionTypes, questionTypeId]);\r\n    } else {\r\n      // Remove the deselected question type from the list\r\n      setSelectedQuestionTypes(selectedQuestionTypes.filter(id => id !== questionTypeId));\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3081/courese-exams')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setExams(data);\r\n      })\r\n      .catch(error => console.error('Error fetching exams:', error));\r\n  }, []);\r\n\r\n  const handleexams = async (event) => {\r\n    const selectedExamId = event.target.value;\r\n  \r\n    // Fetch subjects for the selected exam\r\n    try {\r\n      const response = await fetch(`http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`);\r\n      const subjectsData = await response.json();\r\n      setSelectedSubjects(subjectsData);\r\n    } catch (error) {\r\n      console.error('Error fetching subjects:', error);\r\n    }\r\n  \r\n    setSelectedexams(selectedExamId);\r\n  };\r\n\r\n  const handleSubjectChange = (event, subjectId) => {\r\n    const isChecked = event.target.checked;\r\n  \r\n    if (isChecked) {\r\n      // Add the selected subject to the list\r\n      setSelectedSubjects([...selectedSubjects, subjectId]);\r\n    } else {\r\n      // Remove the deselected subject from the list\r\n      setSelectedSubjects(selectedSubjects.filter(id => id !== subjectId));\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n  \r\n    // Directly parse cost and discount from their input values\r\n    if (name === 'cost' || name === 'discount') {\r\n      const cost = name === 'cost' ? parseFloat(value) : formData.cost;\r\n      const discount = name === 'discount' ? parseFloat(value) : formData.discount;\r\n  \r\n      // Calculate discount amount\r\n      const discountAmount = (!isNaN(cost) && !isNaN(discount)) ? (cost * discount) / 100 : '';\r\n  \r\n      // Calculate total price after discount\r\n      const totalPrice = (!isNaN(cost) && !isNaN(discountAmount)) ? cost - discountAmount : '';\r\n  \r\n      // Update the form data including formatted dates\r\n      setFormData({\r\n        ...formData,\r\n        typeOfTestId: selectedTypeOfTest,\r\n        examId: selectedexams,\r\n        subjects: selectedSubjects,\r\n        questionTypes: selectedQuestionTypes,\r\n        courseStartDate: startDate,\r\n        courseEndDate: endDate,\r\n        cost: cost,\r\n        discount: discount,\r\n        discountAmount: discountAmount,\r\n        totalPrice: totalPrice,\r\n       \r\n      });\r\n    } else if (name === 'courseStartDate' || name === 'courseEndDate') {\r\n      // For date fields, update as usual\r\n      setFormData({ ...formData, [name]: value });\r\n    } else {\r\n      // For other fields, update as usual\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    // Prepare the data for submission\r\n    const data = {\r\n      ...formData,\r\n      typeOfTestId: selectedTypeOfTest,\r\n      examId: selectedexams,\r\n      subjects: selectedSubjects,\r\n      questionTypes: selectedQuestionTypes,\r\n    };\r\n\r\n    // Submit the data to the server\r\n    try {\r\n      const response = await fetch('http://localhost:3081/course-creation', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const result = await response.json();\r\n      console.log(result);\r\n      // Handle success or show a success message to the user\r\n    } catch (error) {\r\n      console.error('Error submitting course data:', error);\r\n      // Handle error or show an error message to the user\r\n    }\r\n  };\r\n\r\n  const handleStartDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setStartDate(formattedDate);\r\n  };\r\n  \r\n  const handleEndDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setEndDate(formattedDate);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Create a New Course</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"courseName\">Course Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"courseName\"\r\n            name=\"courseName\"\r\n            value={formData.courseName}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n      <label htmlFor=\"typeOfTest\">Select Type of Test:</label>\r\n      <select id=\"typeOfTest\" value={selectedTypeOfTest} onChange={handleTypeOfTestChange}>\r\n        <option value=\"\">Select Type of Test</option>\r\n        {typeOfTests.map(test => (\r\n          <option key={test.quesionTypeId } value={test.quesionTypeId }>\r\n            {test.typeofQuestion}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n\r\n\r\n    <div>\r\n      <label htmlFor=\"exams\">Select Exam:</label>\r\n      <select id=\"exams\" value={selectedexams} onChange={handleexams}>\r\n        <option value=\"\">Select exams</option>\r\n        {exams.map(exams => (\r\n          <option key={exams.examId} value={exams.examId}>\r\n            {exams.examName}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n\r\n    <div>\r\n  <label>Subjects:</label>\r\n  {selectedSubjects.map(subject => (\r\n    <div key={subject.subjectId}>\r\n      <input\r\n        type=\"checkbox\"\r\n        id={`subject-${subject.subjectId}`}\r\n        name={`subject-${subject.subjectId}`}\r\n        value={subject.subjectId}\r\n        checked={selectedSubjects.includes(subject.subjectId)}\r\n        onChange={(e) => handleSubjectChange(e, subject.subjectId)}\r\n      />\r\n      <label htmlFor={`subject-${subject.subjectId}`}>{subject.subjectName}</label>\r\n    </div>\r\n  ))}\r\n</div>\r\n<div>\r\n  <label>Question Types:</label>\r\n  {questionTypes.map(questionType => (\r\n    <div key={questionType.quesionTypeId}>\r\n      <input\r\n        type=\"checkbox\" \r\n        id={`questiontypes-${questionType.quesionTypeId}`}\r\n        name={`questiontypes-${questionType.quesionTypeId}`}\r\n        value={questionType.quesionTypeId}\r\n        checked={selectedQuestionTypes.includes(questionType.quesionTypeId)}\r\n        onChange={(e) => handleQuestionTypeChange(e, questionType.quesionTypeId)}\r\n      />\r\n      <label htmlFor={`question-type-${questionType.quesionTypeId}`}>\r\n        {questionType.typeofQuestion}\r\n      </label>\r\n    </div>\r\n  ))}\r\n</div>\r\n<div>\r\n          <label htmlFor=\"courseStartDate\">Start Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"courseStartDate\"\r\n            name=\"courseStartDate\"\r\n            value={startDate}\r\n            onChange={handleStartDateChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"courseEndDate\">End Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"courseEndDate\"\r\n            name=\"courseEndDate\"\r\n            value={endDate}\r\n            onChange={handleEndDateChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"cost\">Cost:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"cost\"\r\n            name=\"cost\"\r\n            value={formData.cost}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"discount\">Discount (%):</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"discount\"\r\n            name=\"discount\"\r\n            value={formData.discount}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"discountAmount\">Discount Amount:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"discountAmount\"\r\n            name=\"discountAmount\"\r\n            value={formData.discountAmount}\r\n            readOnly // Make it read-only to prevent manual input\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"totalPrice\">Total Price:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"totalPrice\"\r\n            name=\"totalPrice\"\r\n            value={formData.totalPrice}\r\n            readOnly // Make it read-only to prevent manual input\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Coursecreation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}