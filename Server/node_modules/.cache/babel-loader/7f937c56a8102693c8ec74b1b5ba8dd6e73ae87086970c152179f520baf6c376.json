{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new admin project\\\\client\\\\src\\\\components\\\\Coursecreation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Coursecreation = () => {\n  _s();\n  const [typeOfTest, setTypeOfTest] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [selectedexams, setSelectedexams] = useState('');\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [typeofQuestion, setTypeofQuestion] = useState([]);\n  const [selectedtypeofQuestion, setSelectedtypeofQuestion] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [subjectsData, setSubjectsData] = useState([]);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [courseData, setCourseData] = useState([]);\n  const [examNames, setExamNames] = useState({});\n  const toggleFormVisibility = () => {\n    setIsFormOpen(!isFormOpen);\n  };\n  const [formData, setFormData] = useState({\n    courseName: '',\n    examId: '',\n    typeOfTestId: '',\n    questiontypes: '',\n    courseStartDate: '',\n    courseEndDate: '',\n    cost: '',\n    discount: '',\n    discountAmount: '',\n    totalPrice: ''\n  });\n  useEffect(() => {\n    const fetchCourseData = async () => {\n      try {\n        const response = await fetch('http://localhost:3081/course_creation_table');\n        const result = await response.json();\n        console.log('Fetched Course Data:', result);\n        setCourseData(result);\n      } catch (error) {\n        console.error('Error fetching course data:', error);\n      }\n    };\n    fetchCourseData();\n  }, []);\n  useEffect(() => {\n    // Function to fetch examName for a given courseCreationId\n    const fetchExamName = async courseCreationId => {\n      try {\n        const response = await fetch(`http://localhost:3081/course-exam/${courseCreationId}`);\n        const result = await response.json();\n\n        // Update the examNames state with the fetched examName\n        setExamNames(prevExamNames => ({\n          ...prevExamNames,\n          [courseCreationId]: result.examName\n        }));\n      } catch (error) {\n        console.error(`Error fetching examName for courseCreationId ${courseCreationId}:`, error);\n      }\n    };\n\n    // Loop through each unique courseCreationId in courseData and fetch the examName\n    courseData.forEach(course => {\n      // Check if the examName for this courseCreationId hasn't been fetched yet\n      if (!examNames[course.courseCreationId]) {\n        // Fetch the examName for this courseCreationId\n        fetchExamName(course.courseCreationId);\n      }\n    });\n  }, [courseData, examNames]); // Only re-run the effect if courseData or examNames change\n\n  useEffect(() => {\n    const fetchTypeOfTest = async () => {\n      try {\n        const response = await fetch('http://localhost:3081/type_of_tests');\n        const result = await response.json();\n        setTypeOfTest(result);\n      } catch (error) {\n        console.error('Error fetching Type of questions:', error);\n      }\n    };\n    fetchTypeOfTest();\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:3081/courese-exams').then(response => response.json()).then(data => {\n      setExams(data);\n    }).catch(error => console.error('Error fetching exams:', error));\n  }, []);\n  const handleexams = async event => {\n    const selectedExamId = event.target.value;\n    try {\n      const response = await fetch(`http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`);\n      const data = await response.json();\n      console.log('Subjects Data:', data); // Log the fetched data\n      setSubjectsData(data); // Update subjectsData state\n      setSelectedSubjects([]); // Reset selected subjects\n    } catch (error) {\n      console.error('Error fetching subjects:', error);\n    }\n    setSelectedexams(selectedExamId);\n  };\n  const handleSubjectChange = (event, subjectId) => {\n    const {\n      checked\n    } = event.target;\n    // Fetch the subject details from subjectsData using subjectId\n    const subject = subjectsData.find(subj => subj.subjectId === subjectId);\n    if (subject) {\n      // If checked, add the subject to the selectedSubjects array\n      // If unchecked, remove the subject from the selectedSubjects array\n      setSelectedSubjects(prevSelectedSubjects => {\n        if (checked) {\n          return [...prevSelectedSubjects, subjectId];\n        } else {\n          return prevSelectedSubjects.filter(id => id !== subjectId);\n        }\n      });\n    }\n  };\n  const handleQuestionChange = (event, questionTypeId) => {\n    const {\n      checked\n    } = event.target;\n    setSelectedtypeofQuestion(prevSelectedQuestions => {\n      if (checked) {\n        return [...prevSelectedQuestions, questionTypeId];\n      } else {\n        return prevSelectedQuestions.filter(id => id !== questionTypeId);\n      }\n    });\n  };\n  useEffect(() => {\n    const fetchTypeOfQuestion = async () => {\n      try {\n        const response = await fetch('http://localhost:3081/type_of_questions');\n        const result = await response.json();\n        setTypeofQuestion(result);\n      } catch (error) {\n        console.error('Error fetching Type of questions:', error);\n      }\n    };\n    fetchTypeOfQuestion();\n  }, []);\n  const handleStartDateChange = e => {\n    const formattedDate = e.target.value;\n    setStartDate(formattedDate);\n  };\n  const handleEndDateChange = e => {\n    const formattedDate = e.target.value;\n    setEndDate(formattedDate);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'cost' || name === 'discount') {\n      const cost = name === 'cost' ? parseFloat(value) : formData.cost;\n      const discount = name === 'discount' ? parseFloat(value) : formData.discount;\n      const discountAmount = !isNaN(cost) && !isNaN(discount) ? cost * discount / 100 : '';\n      const totalPrice = !isNaN(cost) && !isNaN(discountAmount) ? cost - discountAmount : '';\n      setFormData({\n        ...formData,\n        typeOfTestId: value,\n        examId: selectedexams,\n        subjects: selectedSubjects,\n        typeofQuestion: selectedtypeofQuestion,\n        courseStartDate: startDate,\n        courseEndDate: endDate,\n        cost: cost,\n        discount: discount,\n        discountAmount: discountAmount,\n        totalPrice: totalPrice\n      });\n    } else if (name === 'courseStartDate' || name === 'courseEndDate') {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prepare the data for submission\n    const data = {\n      ...formData,\n      typeOfTest,\n      examId: selectedexams,\n      subjects: selectedSubjects,\n      typeofQuestion: selectedtypeofQuestion // Assuming selectedtypeofQuestion is an array\n    };\n\n    // Submit the data to the server\n    try {\n      const response = await fetch('http://localhost:3081/course-creation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n\n      // Check if the result contains the expected structure\n      if (result && result.courseCreationId) {\n        const courseCreationId = result.courseCreationId;\n\n        // Use the courseCreationId in the second fetch to add subjects\n        const subjectsResponse = await fetch('http://localhost:3081/course_type_of_question', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            courseCreationId,\n            subjectIds: selectedSubjects,\n            quesionTypeIds: selectedtypeofQuestion\n          })\n        });\n        const subjectsResult = await subjectsResponse.json();\n        console.log('Subjects Result:', subjectsResult);\n        console.log(result);\n\n        // Handle success or show a success message to the user\n        // Adjust the condition based on the actual structure of the response\n        if (result.success) {\n          console.log('Course created successfully');\n        } else {\n          console.log('Failed to create course:', result.error);\n        }\n      } else {\n        console.log('Failed to create course. Unexpected response:', result);\n      }\n    } catch (error) {\n      console.error('Error submitting course data:', error);\n      // Handle error or show an error message to the user\n    }\n  };\n\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is 0-based\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleFormVisibility,\n      children: isFormOpen ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-circle-xmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this) : 'Add Course'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this), isFormOpen && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"courseName\",\n          children: \"Course Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"courseName\",\n          name: \"courseName\",\n          value: formData.courseName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type of test:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.typeOfTestId,\n            name: \"typeOfTestId\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select type of test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), typeOfTest.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type.typeOfTestId,\n              children: type.typeOfTestName\n            }, type.typeOfTestId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Select Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exams\",\n            children: \"Select Exam:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"exams\",\n            value: selectedexams,\n            onChange: handleexams,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select exams\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), exams.map(exams => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: exams.examId,\n              children: exams.examName\n            }, exams.examId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Subjects:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), subjectsData.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `subject-${subject.subjectId}`,\n              name: `subject-${subject.subjectId}`,\n              value: subject.subjectId,\n              checked: selectedSubjects.includes(subject.subjectId),\n              onChange: e => handleSubjectChange(e, subject.subjectId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `subject-${subject.subjectId}`,\n              children: subject.subjectName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this)]\n          }, subject.subjectId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"type of Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: typeofQuestion.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `question-${type.quesionTypeId}`,\n              name: `question-${type.quesionTypeId}`,\n              value: type.quesionTypeId,\n              checked: selectedtypeofQuestion.includes(type.quesionTypeId),\n              onChange: e => handleQuestionChange(e, type.quesionTypeId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `question-${type.quesionTypeId}`,\n              children: type.typeofQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this)]\n          }, type.quesionTypeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Course Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"courseStartDate\",\n            children: \"Course Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"courseStartDate\",\n            name: \"courseStartDate\",\n            value: startDate,\n            onChange: handleStartDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"courseEndDate\",\n            children: \"Course End Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"courseEndDate\",\n            name: \"courseEndDate\",\n            value: endDate,\n            onChange: handleEndDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Cost and Discounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cost\",\n            children: \"Cost:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cost\",\n            name: \"cost\",\n            value: formData.cost,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"discount\",\n            children: \"Discount (%):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"discount\",\n            name: \"discount\",\n            value: formData.discount,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"discountAmount\",\n            children: \"Discount Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"discountAmount\",\n            name: \"discountAmount\",\n            value: formData.discountAmount,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"totalPrice\",\n            children: \"Total Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"totalPrice\",\n            name: \"totalPrice\",\n            value: formData.totalPrice,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Course ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Course Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type of Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Exam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Course Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Course End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Discount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: courseData.map(course => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.courseCreationId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.courseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.typeOfTestName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: examNames[course.courseCreationId]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(course.courseStartDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(course.courseEndDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.cost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.Discount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.totalPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this)]\n        }, course.courseCreationId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n};\n_s(Coursecreation, \"wT2fNZXqfq+GCMl2HZC3X29nH/E=\");\n_c = Coursecreation;\nexport default Coursecreation;\nvar _c;\n$RefreshReg$(_c, \"Coursecreation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Coursecreation","_s","typeOfTest","setTypeOfTest","exams","setExams","selectedexams","setSelectedexams","selectedSubjects","setSelectedSubjects","typeofQuestion","setTypeofQuestion","selectedtypeofQuestion","setSelectedtypeofQuestion","startDate","setStartDate","endDate","setEndDate","subjectsData","setSubjectsData","isFormOpen","setIsFormOpen","courseData","setCourseData","examNames","setExamNames","toggleFormVisibility","formData","setFormData","courseName","examId","typeOfTestId","questiontypes","courseStartDate","courseEndDate","cost","discount","discountAmount","totalPrice","fetchCourseData","response","fetch","result","json","console","log","error","fetchExamName","courseCreationId","prevExamNames","examName","forEach","course","fetchTypeOfTest","then","data","catch","handleexams","event","selectedExamId","target","value","handleSubjectChange","subjectId","checked","subject","find","subj","prevSelectedSubjects","filter","id","handleQuestionChange","questionTypeId","prevSelectedQuestions","fetchTypeOfQuestion","handleStartDateChange","e","formattedDate","handleEndDateChange","handleChange","name","parseFloat","isNaN","subjects","handleSubmit","preventDefault","method","headers","body","JSON","stringify","subjectsResponse","subjectIds","quesionTypeIds","subjectsResult","success","formatDate","dateString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","map","typeOfTestName","includes","subjectName","quesionTypeId","readOnly","Discount","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/new admin project/client/src/components/Coursecreation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst Coursecreation = () => {\r\n  const [typeOfTest, setTypeOfTest] = useState([]);\r\n  const [exams, setExams] = useState([]);\r\n  const [selectedexams, setSelectedexams] = useState('');\r\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n  const [typeofQuestion, setTypeofQuestion] = useState([]);\r\n  const [selectedtypeofQuestion, setSelectedtypeofQuestion] = useState([]);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [subjectsData, setSubjectsData] = useState([]);\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [courseData, setCourseData] = useState([]);\r\n  const [examNames, setExamNames] = useState({});\r\n  const toggleFormVisibility = () => {\r\n    setIsFormOpen(!isFormOpen);\r\n  };\r\n\r\n  const [formData, setFormData] = useState({\r\n    courseName: '',\r\n    examId: '',\r\n    typeOfTestId: '',\r\n    questiontypes: '',\r\n    courseStartDate: '',\r\n    courseEndDate: '',\r\n    cost: '',\r\n    discount: '',\r\n    discountAmount: '',\r\n    totalPrice: '',\r\n\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchCourseData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3081/course_creation_table');\r\n        const result = await response.json();\r\n        console.log('Fetched Course Data:', result);\r\n        setCourseData(result);\r\n      } catch (error) {\r\n        console.error('Error fetching course data:', error);\r\n      }\r\n    };\r\n    \r\n    fetchCourseData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Function to fetch examName for a given courseCreationId\r\n    const fetchExamName = async (courseCreationId) => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3081/course-exam/${courseCreationId}`);\r\n        const result = await response.json();\r\n  \r\n        // Update the examNames state with the fetched examName\r\n        setExamNames((prevExamNames) => ({\r\n          ...prevExamNames,\r\n          [courseCreationId]: result.examName,\r\n        }));\r\n      } catch (error) {\r\n        console.error(`Error fetching examName for courseCreationId ${courseCreationId}:`, error);\r\n      }\r\n    };\r\n  \r\n    // Loop through each unique courseCreationId in courseData and fetch the examName\r\n    courseData.forEach((course) => {\r\n      // Check if the examName for this courseCreationId hasn't been fetched yet\r\n      if (!examNames[course.courseCreationId]) {\r\n        // Fetch the examName for this courseCreationId\r\n        fetchExamName(course.courseCreationId);\r\n      }\r\n    });\r\n  }, [courseData, examNames]); // Only re-run the effect if courseData or examNames change\r\n  \r\n  useEffect(() => {\r\n    const fetchTypeOfTest = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3081/type_of_tests');\r\n        const result = await response.json();\r\n        setTypeOfTest(result);\r\n      } catch (error) {\r\n        console.error('Error fetching Type of questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchTypeOfTest();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3081/courese-exams')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setExams(data);\r\n      })\r\n      .catch(error => console.error('Error fetching exams:', error));\r\n  }, []);\r\n\r\n\r\nconst handleexams = async (event) => {\r\n  const selectedExamId = event.target.value;\r\n  try {\r\n    const response = await fetch(`http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`);\r\n    const data = await response.json();\r\n    console.log('Subjects Data:', data); // Log the fetched data\r\n    setSubjectsData(data);  // Update subjectsData state\r\n    setSelectedSubjects([]); // Reset selected subjects\r\n  } catch (error) {\r\n    console.error('Error fetching subjects:', error);\r\n  }\r\n\r\n  setSelectedexams(selectedExamId);\r\n};\r\n\r\n\r\n\r\n  const handleSubjectChange = (event, subjectId) => {\r\n    const { checked } = event.target;\r\n    // Fetch the subject details from subjectsData using subjectId\r\n    const subject = subjectsData.find((subj) => subj.subjectId === subjectId);\r\n\r\n    if (subject) {\r\n      // If checked, add the subject to the selectedSubjects array\r\n      // If unchecked, remove the subject from the selectedSubjects array\r\n      setSelectedSubjects((prevSelectedSubjects) => {\r\n        if (checked) {\r\n          return [...prevSelectedSubjects, subjectId];\r\n        } else {\r\n          return prevSelectedSubjects.filter((id) => id !== subjectId);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const handleQuestionChange = (event, questionTypeId) => {\r\n    const { checked } = event.target;\r\n\r\n    setSelectedtypeofQuestion((prevSelectedQuestions) => {\r\n      if (checked) {\r\n        return [...prevSelectedQuestions, questionTypeId];\r\n      } else {\r\n        return prevSelectedQuestions.filter((id) => id !== questionTypeId);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTypeOfQuestion = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3081/type_of_questions');\r\n        const result = await response.json();\r\n        setTypeofQuestion(result);\r\n      } catch (error) {\r\n        console.error('Error fetching Type of questions:', error);\r\n      }\r\n    };\r\n  \r\n    fetchTypeOfQuestion();\r\n  }, []);\r\n  \r\n\r\n\r\n  const handleStartDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setStartDate(formattedDate);\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setEndDate(formattedDate);\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'cost' || name === 'discount') {\r\n      const cost = name === 'cost' ? parseFloat(value) : formData.cost;\r\n      const discount = name === 'discount' ? parseFloat(value) : formData.discount;\r\n      const discountAmount = (!isNaN(cost) && !isNaN(discount)) ? (cost * discount) / 100 : '';\r\n      const totalPrice = (!isNaN(cost) && !isNaN(discountAmount)) ? cost - discountAmount : '';\r\n      setFormData({\r\n        ...formData,\r\n        typeOfTestId: value,\r\n        examId: selectedexams,\r\n        subjects: selectedSubjects,\r\n        typeofQuestion: selectedtypeofQuestion,\r\n        courseStartDate: startDate,\r\n        courseEndDate: endDate,\r\n        cost: cost,\r\n        discount: discount,\r\n        discountAmount: discountAmount,\r\n        totalPrice: totalPrice,\r\n\r\n      });\r\n    } else if (name === 'courseStartDate' || name === 'courseEndDate') {\r\n      setFormData({ ...formData, [name]: value });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Prepare the data for submission\r\n    const data = {\r\n      ...formData,\r\n      typeOfTest,\r\n      examId: selectedexams,\r\n      subjects: selectedSubjects,\r\n      typeofQuestion: selectedtypeofQuestion, // Assuming selectedtypeofQuestion is an array\r\n    };\r\n\r\n    // Submit the data to the server\r\n    try {\r\n      const response = await fetch('http://localhost:3081/course-creation', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      // Check if the result contains the expected structure\r\n      if (result && result.courseCreationId) {\r\n        const courseCreationId = result.courseCreationId;\r\n\r\n        // Use the courseCreationId in the second fetch to add subjects\r\n        const subjectsResponse = await fetch('http://localhost:3081/course_type_of_question', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            courseCreationId,\r\n            subjectIds: selectedSubjects,\r\n            quesionTypeIds: selectedtypeofQuestion,\r\n          }),\r\n        });\r\n\r\n        const subjectsResult = await subjectsResponse.json();\r\n        console.log('Subjects Result:', subjectsResult);\r\n        console.log(result);\r\n\r\n        // Handle success or show a success message to the user\r\n        // Adjust the condition based on the actual structure of the response\r\n        if (result.success) {\r\n          console.log('Course created successfully');\r\n        } else {\r\n          console.log('Failed to create course:', result.error);\r\n        }\r\n      } else {\r\n        console.log('Failed to create course. Unexpected response:', result);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting course data:', error);\r\n      // Handle error or show an error message to the user\r\n    }\r\n  };\r\n  function formatDate(dateString) {\r\n    const date = new Date(dateString);\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is 0-based\r\n    const year = date.getFullYear();\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <button onClick={toggleFormVisibility}>\r\n        {isFormOpen ? (\r\n          <i className=\"far fa-circle-xmark\"></i>\r\n        ) : (\r\n          'Add Course'\r\n        )}\r\n      </button>\r\n\r\n      {isFormOpen && (\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"courseName\">Course Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"courseName\"\r\n              name=\"courseName\"\r\n              value={formData.courseName}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <br />\r\n          <fieldset>\r\n            <label>\r\n              Type of test:\r\n            </label>\r\n            <div>\r\n              <select\r\n                value={formData.typeOfTestId}\r\n                name=\"typeOfTestId\"\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\">Select type of test</option>\r\n                {typeOfTest.map((type) => (\r\n                  <option key={type.typeOfTestId} value={type.typeOfTestId}>\r\n                    {type.typeOfTestName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </fieldset>\r\n          <br />\r\n          <fieldset>\r\n            <legend>Select Exam</legend>\r\n            <div>\r\n              <label htmlFor=\"exams\">Select Exam:</label>\r\n              <select id=\"exams\" value={selectedexams} onChange={handleexams}>\r\n                <option value=\"\">Select exams</option>\r\n                {exams.map(exams => (\r\n                  <option key={exams.examId} value={exams.examId}>\r\n                    {exams.examName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <br />\r\n            <div>\r\n              <label>Select Subjects:</label>\r\n              {subjectsData.map((subject) => (\r\n                <div key={subject.subjectId}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`subject-${subject.subjectId}`}\r\n                    name={`subject-${subject.subjectId}`}\r\n                    value={subject.subjectId}\r\n                    checked={selectedSubjects.includes(subject.subjectId)}\r\n                    onChange={(e) => handleSubjectChange(e, subject.subjectId)}\r\n                  />\r\n                  <label htmlFor={`subject-${subject.subjectId}`}>{subject.subjectName}</label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </fieldset>\r\n          <br />\r\n          <fieldset>\r\n            <label>\r\n              type of Questions:\r\n            </label>\r\n            <div>\r\n              {typeofQuestion.map((type) => (\r\n                <div key={type.quesionTypeId}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`question-${type.quesionTypeId}`}\r\n                    name={`question-${type.quesionTypeId}`}\r\n                    value={type.quesionTypeId}\r\n                    checked={selectedtypeofQuestion.includes(type.quesionTypeId)}\r\n                    onChange={(e) => handleQuestionChange(e, type.quesionTypeId)}\r\n                  />\r\n                  <label htmlFor={`question-${type.quesionTypeId}`}>{type.typeofQuestion}</label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </fieldset>\r\n          <br />\r\n          <fieldset>\r\n            <legend>Course Duration</legend>\r\n            <div>\r\n              <label htmlFor=\"courseStartDate\">Course Start Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"courseStartDate\"\r\n                name=\"courseStartDate\"\r\n                value={startDate}\r\n                onChange={handleStartDateChange}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"courseEndDate\">Course End Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"courseEndDate\"\r\n                name=\"courseEndDate\"\r\n                value={endDate}\r\n                onChange={handleEndDateChange}\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <br />\r\n          <fieldset>\r\n            <legend>Cost and Discounts</legend>\r\n            <div>\r\n              <label htmlFor=\"cost\">Cost:</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"cost\"\r\n                name=\"cost\"\r\n                value={formData.cost}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"discount\">Discount (%):</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"discount\"\r\n                name=\"discount\"\r\n                value={formData.discount}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"discountAmount\">Discount Amount:</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"discountAmount\"\r\n                name=\"discountAmount\"\r\n                value={formData.discountAmount}\r\n                readOnly\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"totalPrice\">Total Price:</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"totalPrice\"\r\n                name=\"totalPrice\"\r\n                value={formData.totalPrice}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <button type=\"submit\">Create Course</button>\r\n        </form>\r\n      )}\r\n\r\n<table>\r\n  <thead>\r\n  <tr>\r\n            <th>Course ID</th>\r\n            <th>Course Name</th>\r\n            <th>Type of Test</th>\r\n            <th>Exam</th>\r\n            {/* <th>Subjects</th> */}\r\n            {/* <th>Type of Questions</th> */}\r\n            <th>Course Start Date</th>\r\n            <th>Course End Date</th>\r\n            <th>Cost</th>\r\n            <th>Discount</th>\r\n            <th>Total Price</th>\r\n          </tr>\r\n          </thead>\r\n<tbody>\r\n{courseData.map((course) => (\r\n            <tr key={course.courseCreationId}>\r\n              <td>{course.courseCreationId}</td>\r\n              <td>{course.courseName}</td>\r\n              <td>{course.typeOfTestName}</td>\r\n              <td>{examNames[course.courseCreationId]}</td>\r\n              {/* <td>{course.subjects.join(', ')}</td>  */}\r\n              {/* <td>{course.typeofQuestion.join(', ')}</td>  */}\r\n              <td>{formatDate(course.courseStartDate)}</td>\r\n              <td>{formatDate(course.courseEndDate)}</td>\r\n              <td>{course.cost}</td>\r\n              <td>{course.Discount}</td>\r\n              <td>{course.totalPrice}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n</table>\r\n\r\n\r\n\r\n    </div>\r\n  )}\r\n\r\nexport default Coursecreation"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}